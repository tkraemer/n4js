/*
 * Copyright (c) 2016 NumberFour AG.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *   NumberFour AG - Initial API and implementation
 */
import {IInstrumentedTest} from "n4/mangel/mangeltypes/IInstrumentedTest"
import {ResultGroup} from "n4/mangel/mangeltypes/ResultGroup"
import {ResultGroups} from "n4/mangel/mangeltypes/ResultGroups"
import {TestMethodDescriptor} from "n4/mangel/mangeltypes/TestMethodDescriptor"
import {TestResult} from "n4/mangel/mangeltypes/TestResult"
import {Signal} from "n4/mangel/mangeltypes/signal/Signal"
@Singleton
export public class TestSpy {
    public testingStarted = new Signal<{function (numGroups: number, sessionId: string, numTests: number)}>();
    public groupStarted = new Signal<{function (group: IInstrumentedTest)}>();
    public testStarted = new Signal<{function (group: IInstrumentedTest, test: TestMethodDescriptor)}>();

    /** Warning: testFinished may be called multiple times */
    public testFinished = new Signal<{function (group: IInstrumentedTest, test: TestMethodDescriptor, testResult: TestResult, rerunTest: {function()})}>();
    public groupFinished = new Signal<{function (group: IInstrumentedTest, resultGroup: ResultGroup)}>();
    public testingFinished = new Signal<{function(resultGroups: ResultGroups)}>();
    /**
     * resets all signals, removing their handlers.
     */
    public reset(): this {
        let field: string
            ,sig: Signal<?>
        ;
        for (field in this) {
            if (this.hasOwnProperty(field)) {
                sig = (this as Object)[field] as Signal<?>;
                sig.removeAll().forget();
            }
        }
        return this;
    }
}
