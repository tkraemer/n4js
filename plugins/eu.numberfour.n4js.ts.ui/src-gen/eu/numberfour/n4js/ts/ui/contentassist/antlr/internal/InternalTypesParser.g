/*
 * generated by Xtext
 */
parser grammar InternalTypesParser;

options {
	tokenVocab=InternalTypesLexer;
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@header {
package eu.numberfour.n4js.ts.ui.contentassist.antlr.internal; 

import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import eu.numberfour.n4js.ts.services.TypesGrammarAccess;

}

@members {
 
 	private TypesGrammarAccess grammarAccess;
 	
 	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
 	
 	{
		tokenNameToValue.put("ExclamationMark", "'!'");
		tokenNameToValue.put("Ampersand", "'&'");
		tokenNameToValue.put("LeftParenthesis", "'('");
		tokenNameToValue.put("RightParenthesis", "')'");
		tokenNameToValue.put("PlusSign", "'+'");
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("FullStop", "'.'");
		tokenNameToValue.put("Solidus", "'/'");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("Semicolon", "';'");
		tokenNameToValue.put("LessThanSign", "'<'");
		tokenNameToValue.put("GreaterThanSign", "'>'");
		tokenNameToValue.put("QuestionMark", "'?'");
		tokenNameToValue.put("CommercialAt", "'@'");
		tokenNameToValue.put("LeftSquareBracket", "'['");
		tokenNameToValue.put("RightSquareBracket", "']'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Tilde", "'~'");
		tokenNameToValue.put("As", "'as'");
		tokenNameToValue.put("In", "'in'");
		tokenNameToValue.put("FullStopFullStopFullStop", "'...'");
		tokenNameToValue.put("Any", "'any'");
		tokenNameToValue.put("Get", "'get'");
		tokenNameToValue.put("Out", "'out'");
		tokenNameToValue.put("Set", "'set'");
		tokenNameToValue.put("This", "'This'");
		tokenNameToValue.put("Enum", "'enum'");
		tokenNameToValue.put("From", "'from'");
		tokenNameToValue.put("Null", "'null'");
		tokenNameToValue.put("This_1", "'this'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Void", "'void'");
		tokenNameToValue.put("With", "'with'");
		tokenNameToValue.put("Class", "'class'");
		tokenNameToValue.put("Const", "'const'");
		tokenNameToValue.put("Final", "'final'");
		tokenNameToValue.put("Super", "'super'");
		tokenNameToValue.put("Union", "'union'");
		tokenNameToValue.put("Object", "'object'");
		tokenNameToValue.put("Public", "'public'");
		tokenNameToValue.put("Static", "'static'");
		tokenNameToValue.put("Extends", "'extends'");
		tokenNameToValue.put("Indexed", "'indexed'");
		tokenNameToValue.put("Notnull", "'notnull'");
		tokenNameToValue.put("Private", "'private'");
		tokenNameToValue.put("Project", "'project'");
		tokenNameToValue.put("Abstract", "'abstract'");
		tokenNameToValue.put("Function", "'function'");
		tokenNameToValue.put("Nullable", "'nullable'");
		tokenNameToValue.put("Interface", "'interface'");
		tokenNameToValue.put("Primitive", "'primitive'");
		tokenNameToValue.put("Protected", "'protected'");
		tokenNameToValue.put("Undefined", "'undefined'");
		tokenNameToValue.put("Implements", "'implements'");
		tokenNameToValue.put("Constructor", "'constructor'");
		tokenNameToValue.put("VirtualBase", "'virtualBase'");
		tokenNameToValue.put("Intersection", "'intersection'");
		tokenNameToValue.put("AutoboxedType", "'autoboxedType'");
		tokenNameToValue.put("PublicInternal", "'publicInternal'");
		tokenNameToValue.put("ProtectedInternal", "'protectedInternal'");
		tokenNameToValue.put("ProvidedByRuntime", "'providedByRuntime'");
		tokenNameToValue.put("AssignmnentCompatible", "'assignmnentCompatible'");
 	}
 	
    public void setGrammarAccess(TypesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }

	@Override
    protected String getValueForTokenName(String tokenName) {
    	String result = tokenNameToValue.get(tokenName);
    	if (result == null)
    		result = tokenName;
    	return result;
    }
}




// Entry rule entryRuleTypeDefs
entryRuleTypeDefs 
:
{ before(grammarAccess.getTypeDefsRule()); }
	 ruleTypeDefs
{ after(grammarAccess.getTypeDefsRule()); } 
	 EOF 
;

// Rule TypeDefs
ruleTypeDefs 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeDefsAccess().getTypesAssignment()); }
(rule__TypeDefs__TypesAssignment)*
{ after(grammarAccess.getTypeDefsAccess().getTypesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTAnnotation
entryRuleTAnnotation 
:
{ before(grammarAccess.getTAnnotationRule()); }
	 ruleTAnnotation
{ after(grammarAccess.getTAnnotationRule()); } 
	 EOF 
;

// Rule TAnnotation
ruleTAnnotation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnnotationAccess().getGroup()); }
(rule__TAnnotation__Group__0)
{ after(grammarAccess.getTAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTAnnotationArgument
entryRuleTAnnotationArgument 
:
{ before(grammarAccess.getTAnnotationArgumentRule()); }
	 ruleTAnnotationArgument
{ after(grammarAccess.getTAnnotationArgumentRule()); } 
	 EOF 
;

// Rule TAnnotationArgument
ruleTAnnotationArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnnotationArgumentAccess().getAlternatives()); }
(rule__TAnnotationArgument__Alternatives)
{ after(grammarAccess.getTAnnotationArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTAnnotationStringArgument
entryRuleTAnnotationStringArgument 
:
{ before(grammarAccess.getTAnnotationStringArgumentRule()); }
	 ruleTAnnotationStringArgument
{ after(grammarAccess.getTAnnotationStringArgumentRule()); } 
	 EOF 
;

// Rule TAnnotationStringArgument
ruleTAnnotationStringArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnnotationStringArgumentAccess().getValueAssignment()); }
(rule__TAnnotationStringArgument__ValueAssignment)
{ after(grammarAccess.getTAnnotationStringArgumentAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTAnnotationTypeRefArgument
entryRuleTAnnotationTypeRefArgument 
:
{ before(grammarAccess.getTAnnotationTypeRefArgumentRule()); }
	 ruleTAnnotationTypeRefArgument
{ after(grammarAccess.getTAnnotationTypeRefArgumentRule()); } 
	 EOF 
;

// Rule TAnnotationTypeRefArgument
ruleTAnnotationTypeRefArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnnotationTypeRefArgumentAccess().getTypeRefAssignment()); }
(rule__TAnnotationTypeRefArgument__TypeRefAssignment)
{ after(grammarAccess.getTAnnotationTypeRefArgumentAccess().getTypeRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRef
entryRuleTypeRef 
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeRefAccess().getGroup()); }
(rule__TypeRef__Group__0)
{ after(grammarAccess.getTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullModifierToken
entryRuleNullModifierToken 
:
{ before(grammarAccess.getNullModifierTokenRule()); }
	 ruleNullModifierToken
{ after(grammarAccess.getNullModifierTokenRule()); } 
	 EOF 
;

// Rule NullModifierToken
ruleNullModifierToken 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNullModifierTokenAccess().getAlternatives()); }
(rule__NullModifierToken__Alternatives)
{ after(grammarAccess.getNullModifierTokenAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUndefModifierToken
entryRuleUndefModifierToken 
:
{ before(grammarAccess.getUndefModifierTokenRule()); }
	 ruleUndefModifierToken
{ after(grammarAccess.getUndefModifierTokenRule()); } 
	 EOF 
;

// Rule UndefModifierToken
ruleUndefModifierToken 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUndefModifierTokenAccess().getAlternatives()); }
(rule__UndefModifierToken__Alternatives)
{ after(grammarAccess.getUndefModifierTokenAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePrimitiveType
entryRulePrimitiveType 
:
{ before(grammarAccess.getPrimitiveTypeRule()); }
	 rulePrimitiveType
{ after(grammarAccess.getPrimitiveTypeRule()); } 
	 EOF 
;

// Rule PrimitiveType
rulePrimitiveType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
(rule__PrimitiveType__Group__0)
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeReferenceName
entryRuleTypeReferenceName 
:
{ before(grammarAccess.getTypeReferenceNameRule()); }
	 ruleTypeReferenceName
{ after(grammarAccess.getTypeReferenceNameRule()); } 
	 EOF 
;

// Rule TypeReferenceName
ruleTypeReferenceName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeReferenceNameAccess().getAlternatives()); }
(rule__TypeReferenceName__Alternatives)
{ after(grammarAccess.getTypeReferenceNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyType
entryRuleAnyType 
:
{ before(grammarAccess.getAnyTypeRule()); }
	 ruleAnyType
{ after(grammarAccess.getAnyTypeRule()); } 
	 EOF 
;

// Rule AnyType
ruleAnyType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getAnyTypeAccess().getGroup()); }
(rule__AnyType__Group__0)
{ after(grammarAccess.getAnyTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVoidType
entryRuleVoidType 
:
{ before(grammarAccess.getVoidTypeRule()); }
	 ruleVoidType
{ after(grammarAccess.getVoidTypeRule()); } 
	 EOF 
;

// Rule VoidType
ruleVoidType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVoidTypeAccess().getGroup()); }
(rule__VoidType__Group__0)
{ after(grammarAccess.getVoidTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUndefinedType
entryRuleUndefinedType 
:
{ before(grammarAccess.getUndefinedTypeRule()); }
	 ruleUndefinedType
{ after(grammarAccess.getUndefinedTypeRule()); } 
	 EOF 
;

// Rule UndefinedType
ruleUndefinedType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUndefinedTypeAccess().getGroup()); }
(rule__UndefinedType__Group__0)
{ after(grammarAccess.getUndefinedTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullType
entryRuleNullType 
:
{ before(grammarAccess.getNullTypeRule()); }
	 ruleNullType
{ after(grammarAccess.getNullTypeRule()); } 
	 EOF 
;

// Rule NullType
ruleNullType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getNullTypeAccess().getGroup()); }
(rule__NullType__Group__0)
{ after(grammarAccess.getNullTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypesIdentifier
entryRuleTypesIdentifier 
:
{ before(grammarAccess.getTypesIdentifierRule()); }
	 ruleTypesIdentifier
{ after(grammarAccess.getTypesIdentifierRule()); } 
	 EOF 
;

// Rule TypesIdentifier
ruleTypesIdentifier 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypesIdentifierAccess().getAlternatives()); }
(rule__TypesIdentifier__Alternatives)
{ after(grammarAccess.getTypesIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypesComputedPropertyName
entryRuleTypesComputedPropertyName 
:
{ before(grammarAccess.getTypesComputedPropertyNameRule()); }
	 ruleTypesComputedPropertyName
{ after(grammarAccess.getTypesComputedPropertyNameRule()); } 
	 EOF 
;

// Rule TypesComputedPropertyName
ruleTypesComputedPropertyName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getGroup()); }
(rule__TypesComputedPropertyName__Group__0)
{ after(grammarAccess.getTypesComputedPropertyNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypesSymbolLiteralComputedName
entryRuleTypesSymbolLiteralComputedName 
:
{ before(grammarAccess.getTypesSymbolLiteralComputedNameRule()); }
	 ruleTypesSymbolLiteralComputedName
{ after(grammarAccess.getTypesSymbolLiteralComputedNameRule()); } 
	 EOF 
;

// Rule TypesSymbolLiteralComputedName
ruleTypesSymbolLiteralComputedName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getGroup()); }
(rule__TypesSymbolLiteralComputedName__Group__0)
{ after(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypesStringLiteralComputedName
entryRuleTypesStringLiteralComputedName 
:
{ before(grammarAccess.getTypesStringLiteralComputedNameRule()); }
	 ruleTypesStringLiteralComputedName
{ after(grammarAccess.getTypesStringLiteralComputedNameRule()); } 
	 EOF 
;

// Rule TypesStringLiteralComputedName
ruleTypesStringLiteralComputedName 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypesStringLiteralComputedNameAccess().getSTRINGTerminalRuleCall()); }
	RULE_STRING
{ after(grammarAccess.getTypesStringLiteralComputedNameAccess().getSTRINGTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTObjectPrototype
entryRuleTObjectPrototype 
:
{ before(grammarAccess.getTObjectPrototypeRule()); }
	 ruleTObjectPrototype
{ after(grammarAccess.getTObjectPrototypeRule()); } 
	 EOF 
;

// Rule TObjectPrototype
ruleTObjectPrototype 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup()); }
(rule__TObjectPrototype__Group__0)
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVirtualBaseType
entryRuleVirtualBaseType 
:
{ before(grammarAccess.getVirtualBaseTypeRule()); }
	 ruleVirtualBaseType
{ after(grammarAccess.getVirtualBaseTypeRule()); } 
	 EOF 
;

// Rule VirtualBaseType
ruleVirtualBaseType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getGroup()); }
(rule__VirtualBaseType__Group__0)
{ after(grammarAccess.getVirtualBaseTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTClass
entryRuleTClass 
:
{ before(grammarAccess.getTClassRule()); }
	 ruleTClass
{ after(grammarAccess.getTClassRule()); } 
	 EOF 
;

// Rule TClass
ruleTClass 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTClassAccess().getGroup()); }
(rule__TClass__Group__0)
{ after(grammarAccess.getTClassAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTInterface
entryRuleTInterface 
:
{ before(grammarAccess.getTInterfaceRule()); }
	 ruleTInterface
{ after(grammarAccess.getTInterfaceRule()); } 
	 EOF 
;

// Rule TInterface
ruleTInterface 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTInterfaceAccess().getGroup()); }
(rule__TInterface__Group__0)
{ after(grammarAccess.getTInterfaceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallableCtor
entryRuleCallableCtor 
:
{ before(grammarAccess.getCallableCtorRule()); }
	 ruleCallableCtor
{ after(grammarAccess.getCallableCtorRule()); } 
	 EOF 
;

// Rule CallableCtor
ruleCallableCtor 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getCallableCtorAccess().getGroup()); }
(rule__CallableCtor__Group__0)
{ after(grammarAccess.getCallableCtorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTMember
entryRuleTMember 
:
{ before(grammarAccess.getTMemberRule()); }
	 ruleTMember
{ after(grammarAccess.getTMemberRule()); } 
	 EOF 
;

// Rule TMember
ruleTMember 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTMemberAccess().getAlternatives()); }
(rule__TMember__Alternatives)
{ after(grammarAccess.getTMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTMethod
entryRuleTMethod 
:
{ before(grammarAccess.getTMethodRule()); }
	 ruleTMethod
{ after(grammarAccess.getTMethodRule()); } 
	 EOF 
;

// Rule TMethod
ruleTMethod 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTMethodAccess().getGroup()); }
(rule__TMethod__Group__0)
{ after(grammarAccess.getTMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTField
entryRuleTField 
:
{ before(grammarAccess.getTFieldRule()); }
	 ruleTField
{ after(grammarAccess.getTFieldRule()); } 
	 EOF 
;

// Rule TField
ruleTField 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTFieldAccess().getGroup()); }
(rule__TField__Group__0)
{ after(grammarAccess.getTFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTGetter
entryRuleTGetter 
:
{ before(grammarAccess.getTGetterRule()); }
	 ruleTGetter
{ after(grammarAccess.getTGetterRule()); } 
	 EOF 
;

// Rule TGetter
ruleTGetter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTGetterAccess().getGroup()); }
(rule__TGetter__Group__0)
{ after(grammarAccess.getTGetterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTSetter
entryRuleTSetter 
:
{ before(grammarAccess.getTSetterRule()); }
	 ruleTSetter
{ after(grammarAccess.getTSetterRule()); } 
	 EOF 
;

// Rule TSetter
ruleTSetter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTSetterAccess().getGroup()); }
(rule__TSetter__Group__0)
{ after(grammarAccess.getTSetterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTFunction
entryRuleTFunction 
:
{ before(grammarAccess.getTFunctionRule()); }
	 ruleTFunction
{ after(grammarAccess.getTFunctionRule()); } 
	 EOF 
;

// Rule TFunction
ruleTFunction 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTFunctionAccess().getGroup()); }
(rule__TFunction__Group__0)
{ after(grammarAccess.getTFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTEnum
entryRuleTEnum 
:
{ before(grammarAccess.getTEnumRule()); }
	 ruleTEnum
{ after(grammarAccess.getTEnumRule()); } 
	 EOF 
;

// Rule TEnum
ruleTEnum 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTEnumAccess().getGroup()); }
(rule__TEnum__Group__0)
{ after(grammarAccess.getTEnumAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTEnumLiteral
entryRuleTEnumLiteral 
:
{ before(grammarAccess.getTEnumLiteralRule()); }
	 ruleTEnumLiteral
{ after(grammarAccess.getTEnumLiteralRule()); } 
	 EOF 
;

// Rule TEnumLiteral
ruleTEnumLiteral 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTEnumLiteralAccess().getNameAssignment()); }
(rule__TEnumLiteral__NameAssignment)
{ after(grammarAccess.getTEnumLiteralAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRefWithoutModifiers
entryRuleTypeRefWithoutModifiers 
:
{ before(grammarAccess.getTypeRefWithoutModifiersRule()); }
	 ruleTypeRefWithoutModifiers
{ after(grammarAccess.getTypeRefWithoutModifiersRule()); } 
	 EOF 
;

// Rule TypeRefWithoutModifiers
ruleTypeRefWithoutModifiers 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getAlternatives()); }
(rule__TypeRefWithoutModifiers__Alternatives)
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRefFunctionTypeExpression
entryRuleTypeRefFunctionTypeExpression 
:
{ before(grammarAccess.getTypeRefFunctionTypeExpressionRule()); }
	 ruleTypeRefFunctionTypeExpression
{ after(grammarAccess.getTypeRefFunctionTypeExpressionRule()); } 
	 EOF 
;

// Rule TypeRefFunctionTypeExpression
ruleTypeRefFunctionTypeExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getAlternatives()); }
(rule__TypeRefFunctionTypeExpression__Alternatives)
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleTypeRefInClassifierType
entryRuleTypeRefInClassifierType 
:
{ before(grammarAccess.getTypeRefInClassifierTypeRule()); }
	 ruleTypeRefInClassifierType
{ after(grammarAccess.getTypeRefInClassifierTypeRule()); } 
	 EOF 
;

// Rule TypeRefInClassifierType
ruleTypeRefInClassifierType 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeRefInClassifierTypeAccess().getAlternatives()); }
(rule__TypeRefInClassifierType__Alternatives)
{ after(grammarAccess.getTypeRefInClassifierTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisTypeRef
entryRuleThisTypeRef 
:
{ before(grammarAccess.getThisTypeRefRule()); }
	 ruleThisTypeRef
{ after(grammarAccess.getThisTypeRefRule()); } 
	 EOF 
;

// Rule ThisTypeRef
ruleThisTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getThisTypeRefAccess().getAlternatives()); }
(rule__ThisTypeRef__Alternatives)
{ after(grammarAccess.getThisTypeRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisTypeRefNominal
entryRuleThisTypeRefNominal 
:
{ before(grammarAccess.getThisTypeRefNominalRule()); }
	 ruleThisTypeRefNominal
{ after(grammarAccess.getThisTypeRefNominalRule()); } 
	 EOF 
;

// Rule ThisTypeRefNominal
ruleThisTypeRefNominal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getThisTypeRefNominalAccess().getGroup()); }
(rule__ThisTypeRefNominal__Group__0)
{ after(grammarAccess.getThisTypeRefNominalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThisTypeRefStructural
entryRuleThisTypeRefStructural 
:
{ before(grammarAccess.getThisTypeRefStructuralRule()); }
	 ruleThisTypeRefStructural
{ after(grammarAccess.getThisTypeRefStructuralRule()); } 
	 EOF 
;

// Rule ThisTypeRefStructural
ruleThisTypeRefStructural 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getGroup()); }
(rule__ThisTypeRefStructural__Group__0)
{ after(grammarAccess.getThisTypeRefStructuralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionTypeExpression
entryRuleFunctionTypeExpression 
:
{ before(grammarAccess.getFunctionTypeExpressionRule()); }
	 ruleFunctionTypeExpression
{ after(grammarAccess.getFunctionTypeExpressionRule()); } 
	 EOF 
;

// Rule FunctionTypeExpression
ruleFunctionTypeExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGroup()); }
(rule__FunctionTypeExpression__Group__0)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TAnonymousFormalParameterList
ruleTAnonymousFormalParameterList 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getGroup()); }
(rule__TAnonymousFormalParameterList__Group__0)?
{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTAnonymousFormalParameter
entryRuleTAnonymousFormalParameter 
:
{ before(grammarAccess.getTAnonymousFormalParameterRule()); }
	 ruleTAnonymousFormalParameter
{ after(grammarAccess.getTAnonymousFormalParameterRule()); } 
	 EOF 
;

// Rule TAnonymousFormalParameter
ruleTAnonymousFormalParameter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getGroup()); }
(rule__TAnonymousFormalParameter__Group__0)
{ after(grammarAccess.getTAnonymousFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTFormalParameter
entryRuleTFormalParameter 
:
{ before(grammarAccess.getTFormalParameterRule()); }
	 ruleTFormalParameter
{ after(grammarAccess.getTFormalParameterRule()); } 
	 EOF 
;

// Rule TFormalParameter
ruleTFormalParameter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTFormalParameterAccess().getGroup()); }
(rule__TFormalParameter__Group__0)
{ after(grammarAccess.getTFormalParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnionTypeExpression
entryRuleUnionTypeExpression 
:
{ before(grammarAccess.getUnionTypeExpressionRule()); }
	 ruleUnionTypeExpression
{ after(grammarAccess.getUnionTypeExpressionRule()); } 
	 EOF 
;

// Rule UnionTypeExpression
ruleUnionTypeExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getGroup()); }
(rule__UnionTypeExpression__Group__0)
{ after(grammarAccess.getUnionTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntersectionTypeExpression
entryRuleIntersectionTypeExpression 
:
{ before(grammarAccess.getIntersectionTypeExpressionRule()); }
	 ruleIntersectionTypeExpression
{ after(grammarAccess.getIntersectionTypeExpressionRule()); } 
	 EOF 
;

// Rule IntersectionTypeExpression
ruleIntersectionTypeExpression 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getGroup()); }
(rule__IntersectionTypeExpression__Group__0)
{ after(grammarAccess.getIntersectionTypeExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterizedTypeRef
entryRuleParameterizedTypeRef 
:
{ before(grammarAccess.getParameterizedTypeRefRule()); }
	 ruleParameterizedTypeRef
{ after(grammarAccess.getParameterizedTypeRefRule()); } 
	 EOF 
;

// Rule ParameterizedTypeRef
ruleParameterizedTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterizedTypeRefAccess().getAlternatives()); }
(rule__ParameterizedTypeRef__Alternatives)
{ after(grammarAccess.getParameterizedTypeRefAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterizedTypeRefStructural
entryRuleParameterizedTypeRefStructural 
:
{ before(grammarAccess.getParameterizedTypeRefStructuralRule()); }
	 ruleParameterizedTypeRefStructural
{ after(grammarAccess.getParameterizedTypeRefStructuralRule()); } 
	 EOF 
;

// Rule ParameterizedTypeRefStructural
ruleParameterizedTypeRefStructural 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup()); }
(rule__ParameterizedTypeRefStructural__Group__0)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TStructMemberList
ruleTStructMemberList 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructMemberListAccess().getGroup()); }
(rule__TStructMemberList__Group__0)
{ after(grammarAccess.getTStructMemberListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTStructMember
entryRuleTStructMember 
:
{ before(grammarAccess.getTStructMemberRule()); }
	 ruleTStructMember
{ after(grammarAccess.getTStructMemberRule()); } 
	 EOF 
;

// Rule TStructMember
ruleTStructMember 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructMemberAccess().getAlternatives()); }
(rule__TStructMember__Alternatives)
{ after(grammarAccess.getTStructMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTStructMethod
entryRuleTStructMethod 
:
{ before(grammarAccess.getTStructMethodRule()); }
	 ruleTStructMethod
{ after(grammarAccess.getTStructMethodRule()); } 
	 EOF 
;

// Rule TStructMethod
ruleTStructMethod 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructMethodAccess().getGroup()); }
(rule__TStructMethod__Group__0)
{ after(grammarAccess.getTStructMethodAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTStructField
entryRuleTStructField 
:
{ before(grammarAccess.getTStructFieldRule()); }
	 ruleTStructField
{ after(grammarAccess.getTStructFieldRule()); } 
	 EOF 
;

// Rule TStructField
ruleTStructField 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructFieldAccess().getGroup()); }
(rule__TStructField__Group__0)
{ after(grammarAccess.getTStructFieldAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTStructGetter
entryRuleTStructGetter 
:
{ before(grammarAccess.getTStructGetterRule()); }
	 ruleTStructGetter
{ after(grammarAccess.getTStructGetterRule()); } 
	 EOF 
;

// Rule TStructGetter
ruleTStructGetter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructGetterAccess().getGroup()); }
(rule__TStructGetter__Group__0)
{ after(grammarAccess.getTStructGetterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTStructSetter
entryRuleTStructSetter 
:
{ before(grammarAccess.getTStructSetterRule()); }
	 ruleTStructSetter
{ after(grammarAccess.getTStructSetterRule()); } 
	 EOF 
;

// Rule TStructSetter
ruleTStructSetter 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTStructSetterAccess().getGroup()); }
(rule__TStructSetter__Group__0)
{ after(grammarAccess.getTStructSetterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterizedTypeRefNominal
entryRuleParameterizedTypeRefNominal 
:
{ before(grammarAccess.getParameterizedTypeRefNominalRule()); }
	 ruleParameterizedTypeRefNominal
{ after(grammarAccess.getParameterizedTypeRefNominalRule()); } 
	 EOF 
;

// Rule ParameterizedTypeRefNominal
ruleParameterizedTypeRefNominal 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup()); }
(rule__ParameterizedTypeRefNominal__Group__0)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingStrategyUseSiteOperator
entryRuleTypingStrategyUseSiteOperator 
:
{ before(grammarAccess.getTypingStrategyUseSiteOperatorRule()); }
	 ruleTypingStrategyUseSiteOperator
{ after(grammarAccess.getTypingStrategyUseSiteOperatorRule()); } 
	 EOF 
;

// Rule TypingStrategyUseSiteOperator
ruleTypingStrategyUseSiteOperator 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getGroup()); }
(rule__TypingStrategyUseSiteOperator__Group__0)
{ after(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypingStrategyDefSiteOperator
entryRuleTypingStrategyDefSiteOperator 
:
{ before(grammarAccess.getTypingStrategyDefSiteOperatorRule()); }
	 ruleTypingStrategyDefSiteOperator
{ after(grammarAccess.getTypingStrategyDefSiteOperatorRule()); } 
	 EOF 
;

// Rule TypingStrategyDefSiteOperator
ruleTypingStrategyDefSiteOperator 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypingStrategyDefSiteOperatorAccess().getTildeKeyword()); }

	Tilde 

{ after(grammarAccess.getTypingStrategyDefSiteOperatorAccess().getTildeKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstructorTypeRef
entryRuleConstructorTypeRef 
:
{ before(grammarAccess.getConstructorTypeRefRule()); }
	 ruleConstructorTypeRef
{ after(grammarAccess.getConstructorTypeRefRule()); } 
	 EOF 
;

// Rule ConstructorTypeRef
ruleConstructorTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getConstructorTypeRefAccess().getGroup()); }
(rule__ConstructorTypeRef__Group__0)
{ after(grammarAccess.getConstructorTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClassifierTypeRef
entryRuleClassifierTypeRef 
:
{ before(grammarAccess.getClassifierTypeRefRule()); }
	 ruleClassifierTypeRef
{ after(grammarAccess.getClassifierTypeRefRule()); } 
	 EOF 
;

// Rule ClassifierTypeRef
ruleClassifierTypeRef 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getClassifierTypeRefAccess().getGroup()); }
(rule__ClassifierTypeRef__Group__0)
{ after(grammarAccess.getClassifierTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeArgument
entryRuleTypeArgument 
:
{ before(grammarAccess.getTypeArgumentRule()); }
	 ruleTypeArgument
{ after(grammarAccess.getTypeArgumentRule()); } 
	 EOF 
;

// Rule TypeArgument
ruleTypeArgument 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeArgumentAccess().getAlternatives()); }
(rule__TypeArgument__Alternatives)
{ after(grammarAccess.getTypeArgumentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcard
entryRuleWildcard 
:
{ before(grammarAccess.getWildcardRule()); }
	 ruleWildcard
{ after(grammarAccess.getWildcardRule()); } 
	 EOF 
;

// Rule Wildcard
ruleWildcard 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getWildcardAccess().getGroup()); }
(rule__Wildcard__Group__0)
{ after(grammarAccess.getWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcardNewNotation
entryRuleWildcardNewNotation 
:
{ before(grammarAccess.getWildcardNewNotationRule()); }
	 ruleWildcardNewNotation
{ after(grammarAccess.getWildcardNewNotationRule()); } 
	 EOF 
;

// Rule WildcardNewNotation
ruleWildcardNewNotation 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getWildcardNewNotationAccess().getAlternatives()); }
(rule__WildcardNewNotation__Alternatives)
{ after(grammarAccess.getWildcardNewNotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeVariable
entryRuleTypeVariable 
:
{ before(grammarAccess.getTypeVariableRule()); }
	 ruleTypeVariable
{ after(grammarAccess.getTypeVariableRule()); } 
	 EOF 
;

// Rule TypeVariable
ruleTypeVariable 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTypeVariableAccess().getGroup()); }
(rule__TypeVariable__Group__0)
{ after(grammarAccess.getTypeVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTIdentifier
entryRuleTIdentifier 
:
{ before(grammarAccess.getTIdentifierRule()); }
	 ruleTIdentifier
{ after(grammarAccess.getTIdentifierRule()); } 
	 EOF 
;

// Rule TIdentifier
ruleTIdentifier 
    @init {
		int stackSize = keepStackSize();
    }
    :
(
{ before(grammarAccess.getTIdentifierAccess().getAlternatives()); }
(rule__TIdentifier__Alternatives)
{ after(grammarAccess.getTIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule TypeAccessModifier
ruleTypeAccessModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccessModifierAccess().getAlternatives()); }
(rule__TypeAccessModifier__Alternatives)
{ after(grammarAccess.getTypeAccessModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MemberAccessModifier
ruleMemberAccessModifier
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessModifierAccess().getAlternatives()); }
(rule__MemberAccessModifier__Alternatives)
{ after(grammarAccess.getMemberAccessModifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TAnnotationArgument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationArgumentAccess().getTAnnotationStringArgumentParserRuleCall_0()); }
	ruleTAnnotationStringArgument
{ after(grammarAccess.getTAnnotationArgumentAccess().getTAnnotationStringArgumentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTAnnotationArgumentAccess().getTAnnotationTypeRefArgumentParserRuleCall_1()); }
	ruleTAnnotationTypeRefArgument
{ after(grammarAccess.getTAnnotationArgumentAccess().getTAnnotationTypeRefArgumentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTObjectPrototypeParserRuleCall_0()); }
	ruleTObjectPrototype
{ after(grammarAccess.getTypeAccess().getTObjectPrototypeParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTClassParserRuleCall_1()); }
	ruleTClass
{ after(grammarAccess.getTypeAccess().getTClassParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTInterfaceParserRuleCall_2()); }
	ruleTInterface
{ after(grammarAccess.getTypeAccess().getTInterfaceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTEnumParserRuleCall_3()); }
	ruleTEnum
{ after(grammarAccess.getTypeAccess().getTEnumParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getAnyTypeParserRuleCall_4()); }
	ruleAnyType
{ after(grammarAccess.getTypeAccess().getAnyTypeParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVoidTypeParserRuleCall_5()); }
	ruleVoidType
{ after(grammarAccess.getTypeAccess().getVoidTypeParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getUndefinedTypeParserRuleCall_6()); }
	ruleUndefinedType
{ after(grammarAccess.getTypeAccess().getUndefinedTypeParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNullTypeParserRuleCall_7()); }
	ruleNullType
{ after(grammarAccess.getTypeAccess().getNullTypeParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_8()); }
	rulePrimitiveType
{ after(grammarAccess.getTypeAccess().getPrimitiveTypeParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTFunctionParserRuleCall_9()); }
	ruleTFunction
{ after(grammarAccess.getTypeAccess().getTFunctionParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeVariableParserRuleCall_10()); }
	ruleTypeVariable
{ after(grammarAccess.getTypeAccess().getTypeVariableParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getVirtualBaseTypeParserRuleCall_11()); }
	ruleVirtualBaseType
{ after(grammarAccess.getTypeAccess().getVirtualBaseTypeParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullModifierToken__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullModifierTokenAccess().getNotnullKeyword_0()); }

	Notnull 

{ after(grammarAccess.getNullModifierTokenAccess().getNotnullKeyword_0()); }
)

    |(
{ before(grammarAccess.getNullModifierTokenAccess().getNullableKeyword_1()); }

	Nullable 

{ after(grammarAccess.getNullModifierTokenAccess().getNullableKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UndefModifierToken__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefModifierTokenAccess().getQuestionMarkKeyword_0()); }

	QuestionMark 

{ after(grammarAccess.getUndefModifierTokenAccess().getQuestionMarkKeyword_0()); }
)

    |(
{ before(grammarAccess.getUndefModifierTokenAccess().getExclamationMarkKeyword_1()); }

	ExclamationMark 

{ after(grammarAccess.getUndefModifierTokenAccess().getExclamationMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceNameAccess().getVoidKeyword_0()); }

	Void 

{ after(grammarAccess.getTypeReferenceNameAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeReferenceNameAccess().getAnyKeyword_1()); }

	Any 

{ after(grammarAccess.getTypeReferenceNameAccess().getAnyKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypeReferenceNameAccess().getUndefinedKeyword_2()); }

	Undefined 

{ after(grammarAccess.getTypeReferenceNameAccess().getUndefinedKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypeReferenceNameAccess().getNullKeyword_3()); }

	Null 

{ after(grammarAccess.getTypeReferenceNameAccess().getNullKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypeReferenceNameAccess().getIndexedKeyword_4()); }

	Indexed 

{ after(grammarAccess.getTypeReferenceNameAccess().getIndexedKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypeReferenceNameAccess().getGroup_5()); }
(rule__TypeReferenceName__Group_5__0)
{ after(grammarAccess.getTypeReferenceNameAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypesIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTypesIdentifierAccess().getIDENTIFIERTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getGetKeyword_1()); }

	Get 

{ after(grammarAccess.getTypesIdentifierAccess().getGetKeyword_1()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getSetKeyword_2()); }

	Set 

{ after(grammarAccess.getTypesIdentifierAccess().getSetKeyword_2()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getAbstractKeyword_3()); }

	Abstract 

{ after(grammarAccess.getTypesIdentifierAccess().getAbstractKeyword_3()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getAnyKeyword_4()); }

	Any 

{ after(grammarAccess.getTypesIdentifierAccess().getAnyKeyword_4()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getProjectKeyword_5()); }

	Project 

{ after(grammarAccess.getTypesIdentifierAccess().getProjectKeyword_5()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getUnionKeyword_6()); }

	Union 

{ after(grammarAccess.getTypesIdentifierAccess().getUnionKeyword_6()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getIntersectionKeyword_7()); }

	Intersection 

{ after(grammarAccess.getTypesIdentifierAccess().getIntersectionKeyword_7()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getAsKeyword_8()); }

	As 

{ after(grammarAccess.getTypesIdentifierAccess().getAsKeyword_8()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getFromKeyword_9()); }

	From 

{ after(grammarAccess.getTypesIdentifierAccess().getFromKeyword_9()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getTypeKeyword_10()); }

	Type 

{ after(grammarAccess.getTypesIdentifierAccess().getTypeKeyword_10()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getVoidKeyword_11()); }

	Void 

{ after(grammarAccess.getTypesIdentifierAccess().getVoidKeyword_11()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getNullKeyword_12()); }

	Null 

{ after(grammarAccess.getTypesIdentifierAccess().getNullKeyword_12()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getUndefinedKeyword_13()); }

	Undefined 

{ after(grammarAccess.getTypesIdentifierAccess().getUndefinedKeyword_13()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getConstructorKeyword_14()); }

	Constructor 

{ after(grammarAccess.getTypesIdentifierAccess().getConstructorKeyword_14()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getObjectKeyword_15()); }

	Object 

{ after(grammarAccess.getTypesIdentifierAccess().getObjectKeyword_15()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getVirtualBaseKeyword_16()); }

	VirtualBase 

{ after(grammarAccess.getTypesIdentifierAccess().getVirtualBaseKeyword_16()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getPrimitiveKeyword_17()); }

	Primitive 

{ after(grammarAccess.getTypesIdentifierAccess().getPrimitiveKeyword_17()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getAutoboxedTypeKeyword_18()); }

	AutoboxedType 

{ after(grammarAccess.getTypesIdentifierAccess().getAutoboxedTypeKeyword_18()); }
)

    |(
{ before(grammarAccess.getTypesIdentifierAccess().getAssignmnentCompatibleKeyword_19()); }

	AssignmnentCompatible 

{ after(grammarAccess.getTypesIdentifierAccess().getAssignmnentCompatibleKeyword_19()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypesComputedPropertyName__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getTypesSymbolLiteralComputedNameParserRuleCall_1_0()); }
	ruleTypesSymbolLiteralComputedName
{ after(grammarAccess.getTypesComputedPropertyNameAccess().getTypesSymbolLiteralComputedNameParserRuleCall_1_0()); }
)

    |(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getTypesStringLiteralComputedNameParserRuleCall_1_1()); }
	ruleTypesStringLiteralComputedName
{ after(grammarAccess.getTypesComputedPropertyNameAccess().getTypesStringLiteralComputedNameParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMemberAccess().getTGetterParserRuleCall_0()); }
(	ruleTGetter)
{ after(grammarAccess.getTMemberAccess().getTGetterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTMemberAccess().getTSetterParserRuleCall_1()); }
(	ruleTSetter)
{ after(grammarAccess.getTMemberAccess().getTSetterParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTMemberAccess().getTMethodParserRuleCall_2()); }
(	ruleTMethod)
{ after(grammarAccess.getTMemberAccess().getTMethodParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTMemberAccess().getTFieldParserRuleCall_3()); }
	ruleTField
{ after(grammarAccess.getTMemberAccess().getTFieldParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Alternatives_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getDeclaredStaticAssignment_0_0_1_0()); }
(rule__TMethod__DeclaredStaticAssignment_0_0_1_0)
{ after(grammarAccess.getTMethodAccess().getDeclaredStaticAssignment_0_0_1_0()); }
)

    |(
{ before(grammarAccess.getTMethodAccess().getDeclaredAbstractAssignment_0_0_1_1()); }
(rule__TMethod__DeclaredAbstractAssignment_0_0_1_1)
{ after(grammarAccess.getTMethodAccess().getDeclaredAbstractAssignment_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Alternatives_0_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getNameAssignment_0_0_3_0()); }
(rule__TMethod__NameAssignment_0_0_3_0)
{ after(grammarAccess.getTMethodAccess().getNameAssignment_0_0_3_0()); }
)

    |(
{ before(grammarAccess.getTMethodAccess().getNameAssignment_0_0_3_1()); }
(rule__TMethod__NameAssignment_0_0_3_1)
{ after(grammarAccess.getTMethodAccess().getNameAssignment_0_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getDeclaredStaticAssignment_1_0()); }
(rule__TField__DeclaredStaticAssignment_1_0)
{ after(grammarAccess.getTFieldAccess().getDeclaredStaticAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getTFieldAccess().getConstAssignment_1_1()); }
(rule__TField__ConstAssignment_1_1)
{ after(grammarAccess.getTFieldAccess().getConstAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getTFieldAccess().getDeclaredFinalAssignment_1_2()); }
(rule__TField__DeclaredFinalAssignment_1_2)
{ after(grammarAccess.getTFieldAccess().getDeclaredFinalAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getNameAssignment_2_0()); }
(rule__TField__NameAssignment_2_0)
{ after(grammarAccess.getTFieldAccess().getNameAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getTFieldAccess().getNameAssignment_2_1()); }
(rule__TField__NameAssignment_2_1)
{ after(grammarAccess.getTFieldAccess().getNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Alternatives_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredAbstractAssignment_0_0_2_0()); }
(rule__TGetter__DeclaredAbstractAssignment_0_0_2_0)
{ after(grammarAccess.getTGetterAccess().getDeclaredAbstractAssignment_0_0_2_0()); }
)

    |(
{ before(grammarAccess.getTGetterAccess().getDeclaredStaticAssignment_0_0_2_1()); }
(rule__TGetter__DeclaredStaticAssignment_0_0_2_1)
{ after(grammarAccess.getTGetterAccess().getDeclaredStaticAssignment_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Alternatives_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getNameAssignment_0_0_4_0()); }
(rule__TGetter__NameAssignment_0_0_4_0)
{ after(grammarAccess.getTGetterAccess().getNameAssignment_0_0_4_0()); }
)

    |(
{ before(grammarAccess.getTGetterAccess().getNameAssignment_0_0_4_1()); }
(rule__TGetter__NameAssignment_0_0_4_1)
{ after(grammarAccess.getTGetterAccess().getNameAssignment_0_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Alternatives_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getDeclaredAbstractAssignment_0_0_2_0()); }
(rule__TSetter__DeclaredAbstractAssignment_0_0_2_0)
{ after(grammarAccess.getTSetterAccess().getDeclaredAbstractAssignment_0_0_2_0()); }
)

    |(
{ before(grammarAccess.getTSetterAccess().getDeclaredStaticAssignment_0_0_2_1()); }
(rule__TSetter__DeclaredStaticAssignment_0_0_2_1)
{ after(grammarAccess.getTSetterAccess().getDeclaredStaticAssignment_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Alternatives_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getNameAssignment_0_0_4_0()); }
(rule__TSetter__NameAssignment_0_0_4_0)
{ after(grammarAccess.getTSetterAccess().getNameAssignment_0_0_4_0()); }
)

    |(
{ before(grammarAccess.getTSetterAccess().getNameAssignment_0_0_4_1()); }
(rule__TSetter__NameAssignment_0_0_4_1)
{ after(grammarAccess.getTSetterAccess().getNameAssignment_0_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefWithoutModifiers__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getGroup_0()); }
(rule__TypeRefWithoutModifiers__Group_0__0)
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getConstructorTypeRefParserRuleCall_1()); }
	ruleConstructorTypeRef
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getConstructorTypeRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getClassifierTypeRefParserRuleCall_2()); }
	ruleClassifierTypeRef
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getClassifierTypeRefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getFunctionTypeExpressionParserRuleCall_3()); }
	ruleFunctionTypeExpression
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getFunctionTypeExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getUnionTypeExpressionParserRuleCall_4()); }
	ruleUnionTypeExpression
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getUnionTypeExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getIntersectionTypeExpressionParserRuleCall_5()); }
	ruleIntersectionTypeExpression
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getIntersectionTypeExpressionParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefWithoutModifiers__Alternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getParameterizedTypeRefParserRuleCall_0_0_0()); }
	ruleParameterizedTypeRef
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getParameterizedTypeRefParserRuleCall_0_0_0()); }
)

    |(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getThisTypeRefParserRuleCall_0_0_1()); }
	ruleThisTypeRef
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getThisTypeRefParserRuleCall_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefFunctionTypeExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getParameterizedTypeRefParserRuleCall_0()); }
	ruleParameterizedTypeRef
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getParameterizedTypeRefParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getConstructorTypeRefParserRuleCall_1()); }
	ruleConstructorTypeRef
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getConstructorTypeRefParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getClassifierTypeRefParserRuleCall_2()); }
	ruleClassifierTypeRef
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getClassifierTypeRefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getUnionTypeExpressionParserRuleCall_3()); }
	ruleUnionTypeExpression
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getUnionTypeExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getIntersectionTypeExpressionParserRuleCall_4()); }
	ruleIntersectionTypeExpression
{ after(grammarAccess.getTypeRefFunctionTypeExpressionAccess().getIntersectionTypeExpressionParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRefInClassifierType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefInClassifierTypeAccess().getParameterizedTypeRefNominalParserRuleCall_0()); }
	ruleParameterizedTypeRefNominal
{ after(grammarAccess.getTypeRefInClassifierTypeAccess().getParameterizedTypeRefNominalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeRefInClassifierTypeAccess().getThisTypeRefNominalParserRuleCall_1()); }
	ruleThisTypeRefNominal
{ after(grammarAccess.getTypeRefInClassifierTypeAccess().getThisTypeRefNominalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefAccess().getThisTypeRefNominalParserRuleCall_0()); }
	ruleThisTypeRefNominal
{ after(grammarAccess.getThisTypeRefAccess().getThisTypeRefNominalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getThisTypeRefAccess().getThisTypeRefStructuralParserRuleCall_1()); }
	ruleThisTypeRefStructural
{ after(grammarAccess.getThisTypeRefAccess().getThisTypeRefStructuralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRef__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); }
	ruleParameterizedTypeRefNominal
{ after(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefNominalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefStructuralParserRuleCall_1()); }
	ruleParameterizedTypeRefStructural
{ after(grammarAccess.getParameterizedTypeRefAccess().getParameterizedTypeRefStructuralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getSemicolonKeyword_1_1_0()); }

	Semicolon 

{ after(grammarAccess.getTStructMemberListAccess().getSemicolonKeyword_1_1_0()); }
)

    |(
{ before(grammarAccess.getTStructMemberListAccess().getCommaKeyword_1_1_1()); }

	Comma 

{ after(grammarAccess.getTStructMemberListAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberAccess().getTStructGetterParserRuleCall_0()); }
(	ruleTStructGetter)
{ after(grammarAccess.getTStructMemberAccess().getTStructGetterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTStructMemberAccess().getTStructSetterParserRuleCall_1()); }
(	ruleTStructSetter)
{ after(grammarAccess.getTStructMemberAccess().getTStructSetterParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTStructMemberAccess().getTStructMethodParserRuleCall_2()); }
(	ruleTStructMethod)
{ after(grammarAccess.getTStructMemberAccess().getTStructMethodParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getTStructMemberAccess().getTStructFieldParserRuleCall_3()); }
	ruleTStructField
{ after(grammarAccess.getTStructMemberAccess().getTStructFieldParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStrategyUseSiteOperator__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_1_0()); }

	Tilde 

{ after(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getSTRUCTMODSUFFIXTerminalRuleCall_1_1()); }
	RULE_STRUCTMODSUFFIX
{ after(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getSTRUCTMODSUFFIXTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeArgument__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeArgumentAccess().getWildcardParserRuleCall_0()); }
(	ruleWildcard)
{ after(grammarAccess.getTypeArgumentAccess().getWildcardParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getWildcardNewNotationParserRuleCall_1()); }
	ruleWildcardNewNotation
{ after(grammarAccess.getTypeArgumentAccess().getWildcardNewNotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTypeArgumentAccess().getTypeRefParserRuleCall_2()); }
	ruleTypeRef
{ after(grammarAccess.getTypeArgumentAccess().getTypeRefParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getGroup_1_0()); }
(rule__Wildcard__Group_1_0__0)
{ after(grammarAccess.getWildcardAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getWildcardAccess().getGroup_1_1()); }
(rule__Wildcard__Group_1_1__0)
{ after(grammarAccess.getWildcardAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getGroup_0()); }
(rule__WildcardNewNotation__Group_0__0)
{ after(grammarAccess.getWildcardNewNotationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getWildcardNewNotationAccess().getGroup_1()); }
(rule__WildcardNewNotation__Group_1__0)
{ after(grammarAccess.getWildcardNewNotationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTIdentifierAccess().getTypesIdentifierParserRuleCall_0()); }
	ruleTypesIdentifier
{ after(grammarAccess.getTIdentifierAccess().getTypesIdentifierParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getImplementsKeyword_1()); }

	Implements 

{ after(grammarAccess.getTIdentifierAccess().getImplementsKeyword_1()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getInterfaceKeyword_2()); }

	Interface 

{ after(grammarAccess.getTIdentifierAccess().getInterfaceKeyword_2()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getPrivateKeyword_3()); }

	Private 

{ after(grammarAccess.getTIdentifierAccess().getPrivateKeyword_3()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getProtectedKeyword_4()); }

	Protected 

{ after(grammarAccess.getTIdentifierAccess().getProtectedKeyword_4()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getPublicKeyword_5()); }

	Public 

{ after(grammarAccess.getTIdentifierAccess().getPublicKeyword_5()); }
)

    |(
{ before(grammarAccess.getTIdentifierAccess().getStaticKeyword_6()); }

	Static 

{ after(grammarAccess.getTIdentifierAccess().getStaticKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeAccessModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccessModifierAccess().getProjectEnumLiteralDeclaration_0()); }
(	Project
)
{ after(grammarAccess.getTypeAccessModifierAccess().getProjectEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTypeAccessModifierAccess().getPublicInternalEnumLiteralDeclaration_1()); }
(	PublicInternal
)
{ after(grammarAccess.getTypeAccessModifierAccess().getPublicInternalEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTypeAccessModifierAccess().getPublicEnumLiteralDeclaration_2()); }
(	Public
)
{ after(grammarAccess.getTypeAccessModifierAccess().getPublicEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MemberAccessModifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMemberAccessModifierAccess().getPrivateEnumLiteralDeclaration_0()); }
(	Private
)
{ after(grammarAccess.getMemberAccessModifierAccess().getPrivateEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMemberAccessModifierAccess().getProjectEnumLiteralDeclaration_1()); }
(	Project
)
{ after(grammarAccess.getMemberAccessModifierAccess().getProjectEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getMemberAccessModifierAccess().getProtectedInternalEnumLiteralDeclaration_2()); }
(	ProtectedInternal
)
{ after(grammarAccess.getMemberAccessModifierAccess().getProtectedInternalEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getMemberAccessModifierAccess().getProtectedEnumLiteralDeclaration_3()); }
(	Protected
)
{ after(grammarAccess.getMemberAccessModifierAccess().getProtectedEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getMemberAccessModifierAccess().getPublicInternalEnumLiteralDeclaration_4()); }
(	PublicInternal
)
{ after(grammarAccess.getMemberAccessModifierAccess().getPublicInternalEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getMemberAccessModifierAccess().getPublicEnumLiteralDeclaration_5()); }
(	Public
)
{ after(grammarAccess.getMemberAccessModifierAccess().getPublicEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__TAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group__0__Impl
	rule__TAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getGroup_0()); }
(rule__TAnnotation__Group_0__0)
{ after(grammarAccess.getTAnnotationAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getGroup_1()); }
(rule__TAnnotation__Group_1__0)?
{ after(grammarAccess.getTAnnotationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnnotation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getGroup_0_0()); }
(rule__TAnnotation__Group_0_0__0)
{ after(grammarAccess.getTAnnotationAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TAnnotation__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_0_0__0__Impl
	rule__TAnnotation__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getCommercialAtKeyword_0_0_0()); }

	CommercialAt 

{ after(grammarAccess.getTAnnotationAccess().getCommercialAtKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getNameAssignment_0_0_1()); }
(rule__TAnnotation__NameAssignment_0_0_1)
{ after(grammarAccess.getTAnnotationAccess().getNameAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnnotation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1__0__Impl
	rule__TAnnotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getLeftParenthesisKeyword_1_0()); }
(
	LeftParenthesis 
)
{ after(grammarAccess.getTAnnotationAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1__1__Impl
	rule__TAnnotation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getGroup_1_1()); }
(rule__TAnnotation__Group_1_1__0)?
{ after(grammarAccess.getTAnnotationAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getRightParenthesisKeyword_1_2()); }

	RightParenthesis 

{ after(grammarAccess.getTAnnotationAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TAnnotation__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1_1__0__Impl
	rule__TAnnotation__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getArgsAssignment_1_1_0()); }
(rule__TAnnotation__ArgsAssignment_1_1_0)
{ after(grammarAccess.getTAnnotationAccess().getArgsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getGroup_1_1_1()); }
(rule__TAnnotation__Group_1_1_1__0)*
{ after(grammarAccess.getTAnnotationAccess().getGroup_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnnotation__Group_1_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1_1_1__0__Impl
	rule__TAnnotation__Group_1_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getCommaKeyword_1_1_1_0()); }

	Comma 

{ after(grammarAccess.getTAnnotationAccess().getCommaKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnnotation__Group_1_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnnotation__Group_1_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__Group_1_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getArgsAssignment_1_1_1_1()); }
(rule__TAnnotation__ArgsAssignment_1_1_1_1)
{ after(grammarAccess.getTAnnotationAccess().getArgsAssignment_1_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__0__Impl
	rule__TypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getTypeRefWithoutModifiersParserRuleCall_0()); }
	ruleTypeRefWithoutModifiers
{ after(grammarAccess.getTypeRefAccess().getTypeRefWithoutModifiersParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__1__Impl
	rule__TypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getUndefModifierAssignment_1()); }
(rule__TypeRef__UndefModifierAssignment_1)?
{ after(grammarAccess.getTypeRefAccess().getUndefModifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getNullModifierAssignment_2()); }
(rule__TypeRef__NullModifierAssignment_2)?
{ after(grammarAccess.getTypeRefAccess().getNullModifierAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimitiveType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__0__Impl
	rule__PrimitiveType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getPrimitiveKeyword_0()); }

	Primitive 

{ after(grammarAccess.getPrimitiveTypeAccess().getPrimitiveKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__1__Impl
	rule__PrimitiveType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1()); }
(rule__PrimitiveType__NameAssignment_1)
{ after(grammarAccess.getPrimitiveTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__2__Impl
	rule__PrimitiveType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
(rule__PrimitiveType__Group_2__0)?
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__3__Impl
	rule__PrimitiveType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
(rule__PrimitiveType__Group_3__0)?
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__4__Impl
	rule__PrimitiveType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getLeftCurlyBracketKeyword_4()); }

	LeftCurlyBracket 

{ after(grammarAccess.getPrimitiveTypeAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__5__Impl
	rule__PrimitiveType__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_5()); }
(rule__PrimitiveType__Group_5__0)?
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__6__Impl
	rule__PrimitiveType__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGroup_6()); }
(rule__PrimitiveType__Group_6__0)?
{ after(grammarAccess.getPrimitiveTypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getRightCurlyBracketKeyword_7()); }

	RightCurlyBracket 

{ after(grammarAccess.getPrimitiveTypeAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__PrimitiveType__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__0__Impl
	rule__PrimitiveType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getLessThanSignKeyword_2_0()); }

	LessThanSign 

{ after(grammarAccess.getPrimitiveTypeAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__1__Impl
	rule__PrimitiveType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getTypeVarsAssignment_2_1()); }
(rule__PrimitiveType__TypeVarsAssignment_2_1)
{ after(grammarAccess.getPrimitiveTypeAccess().getTypeVarsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getGreaterThanSignKeyword_2_2()); }

	GreaterThanSign 

{ after(grammarAccess.getPrimitiveTypeAccess().getGreaterThanSignKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PrimitiveType__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__0__Impl
	rule__PrimitiveType__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getIndexedKeyword_3_0()); }

	Indexed 

{ after(grammarAccess.getPrimitiveTypeAccess().getIndexedKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getDeclaredElementTypeAssignment_3_1()); }
(rule__PrimitiveType__DeclaredElementTypeAssignment_3_1)
{ after(grammarAccess.getPrimitiveTypeAccess().getDeclaredElementTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_5__0__Impl
	rule__PrimitiveType__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeKeyword_5_0()); }

	AutoboxedType 

{ after(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeAssignment_5_1()); }
(rule__PrimitiveType__AutoboxedTypeAssignment_5_1)
{ after(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PrimitiveType__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_6__0__Impl
	rule__PrimitiveType__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAssignmnentCompatibleKeyword_6_0()); }

	AssignmnentCompatible 

{ after(grammarAccess.getPrimitiveTypeAccess().getAssignmnentCompatibleKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PrimitiveType__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PrimitiveType__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatibleAssignment_6_1()); }
(rule__PrimitiveType__AssignmentCompatibleAssignment_6_1)
{ after(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatibleAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeReferenceName__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceName__Group_5__0__Impl
	rule__TypeReferenceName__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceName__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_5_0()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReferenceName__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceName__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceName__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceNameAccess().getGroup_5_1()); }
(rule__TypeReferenceName__Group_5_1__0)*
{ after(grammarAccess.getTypeReferenceNameAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeReferenceName__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceName__Group_5_1__0__Impl
	rule__TypeReferenceName__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceName__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceNameAccess().getSolidusKeyword_5_1_0()); }

	Solidus 

{ after(grammarAccess.getTypeReferenceNameAccess().getSolidusKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeReferenceName__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeReferenceName__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeReferenceName__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_5_1_1()); }
	RULE_IDENTIFIER
{ after(grammarAccess.getTypeReferenceNameAccess().getIDENTIFIERTerminalRuleCall_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AnyType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyType__Group__0__Impl
	rule__AnyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getAnyTypeAction_0()); }
(

)
{ after(grammarAccess.getAnyTypeAccess().getAnyTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyType__Group__1__Impl
	rule__AnyType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getNameAssignment_1()); }
(rule__AnyType__NameAssignment_1)
{ after(grammarAccess.getAnyTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyType__Group__2__Impl
	rule__AnyType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getAnyTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AnyType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AnyType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getAnyTypeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VoidType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidType__Group__0__Impl
	rule__VoidType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getVoidTypeAction_0()); }
(

)
{ after(grammarAccess.getVoidTypeAccess().getVoidTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VoidType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidType__Group__1__Impl
	rule__VoidType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getNameAssignment_1()); }
(rule__VoidType__NameAssignment_1)
{ after(grammarAccess.getVoidTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VoidType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidType__Group__2__Impl
	rule__VoidType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getVoidTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VoidType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VoidType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getVoidTypeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UndefinedType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefinedType__Group__0__Impl
	rule__UndefinedType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefinedTypeAccess().getUndefinedTypeAction_0()); }
(

)
{ after(grammarAccess.getUndefinedTypeAccess().getUndefinedTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefinedType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefinedType__Group__1__Impl
	rule__UndefinedType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefinedTypeAccess().getNameAssignment_1()); }
(rule__UndefinedType__NameAssignment_1)
{ after(grammarAccess.getUndefinedTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefinedType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefinedType__Group__2__Impl
	rule__UndefinedType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefinedTypeAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getUndefinedTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UndefinedType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UndefinedType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefinedTypeAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getUndefinedTypeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NullType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullType__Group__0__Impl
	rule__NullType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullTypeAccess().getNullTypeAction_0()); }
(

)
{ after(grammarAccess.getNullTypeAccess().getNullTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullType__Group__1__Impl
	rule__NullType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullTypeAccess().getNameAssignment_1()); }
(rule__NullType__NameAssignment_1)
{ after(grammarAccess.getNullTypeAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullType__Group__2__Impl
	rule__NullType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullTypeAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getNullTypeAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullType__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullTypeAccess().getRightCurlyBracketKeyword_3()); }

	RightCurlyBracket 

{ after(grammarAccess.getNullTypeAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypesComputedPropertyName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesComputedPropertyName__Group__0__Impl
	rule__TypesComputedPropertyName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesComputedPropertyName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getLeftSquareBracketKeyword_0()); }

	LeftSquareBracket 

{ after(grammarAccess.getTypesComputedPropertyNameAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypesComputedPropertyName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesComputedPropertyName__Group__1__Impl
	rule__TypesComputedPropertyName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesComputedPropertyName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getAlternatives_1()); }
(rule__TypesComputedPropertyName__Alternatives_1)
{ after(grammarAccess.getTypesComputedPropertyNameAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypesComputedPropertyName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesComputedPropertyName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesComputedPropertyName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesComputedPropertyNameAccess().getRightSquareBracketKeyword_2()); }

	RightSquareBracket 

{ after(grammarAccess.getTypesComputedPropertyNameAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypesSymbolLiteralComputedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesSymbolLiteralComputedName__Group__0__Impl
	rule__TypesSymbolLiteralComputedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesSymbolLiteralComputedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getTypesIdentifierParserRuleCall_0()); }
	ruleTypesIdentifier
{ after(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getTypesIdentifierParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypesSymbolLiteralComputedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesSymbolLiteralComputedName__Group__1__Impl
	rule__TypesSymbolLiteralComputedName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesSymbolLiteralComputedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getFullStopKeyword_1()); }

	FullStop 

{ after(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypesSymbolLiteralComputedName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypesSymbolLiteralComputedName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypesSymbolLiteralComputedName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getTypesIdentifierParserRuleCall_2()); }
	ruleTypesIdentifier
{ after(grammarAccess.getTypesSymbolLiteralComputedNameAccess().getTypesIdentifierParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TObjectPrototype__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__0__Impl
	rule__TObjectPrototype__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredTypeAccessModifierAssignment_0()); }
(rule__TObjectPrototype__DeclaredTypeAccessModifierAssignment_0)
{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredTypeAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__1__Impl
	rule__TObjectPrototype__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
(rule__TObjectPrototype__DeclaredProvidedByRuntimeAssignment_1)?
{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__2__Impl
	rule__TObjectPrototype__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalAssignment_2()); }
(rule__TObjectPrototype__DeclaredFinalAssignment_2)?
{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__3__Impl
	rule__TObjectPrototype__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getObjectKeyword_3()); }

	Object 

{ after(grammarAccess.getTObjectPrototypeAccess().getObjectKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__4__Impl
	rule__TObjectPrototype__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getNameAssignment_4()); }
(rule__TObjectPrototype__NameAssignment_4)
{ after(grammarAccess.getTObjectPrototypeAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__5__Impl
	rule__TObjectPrototype__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup_5()); }
(rule__TObjectPrototype__Group_5__0)?
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__6__Impl
	rule__TObjectPrototype__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup_6()); }
(rule__TObjectPrototype__Group_6__0)?
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__7__Impl
	rule__TObjectPrototype__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup_7()); }
(rule__TObjectPrototype__Group_7__0)?
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__8__Impl
	rule__TObjectPrototype__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getAnnotationsAssignment_8()); }
(rule__TObjectPrototype__AnnotationsAssignment_8)*
{ after(grammarAccess.getTObjectPrototypeAccess().getAnnotationsAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__9__Impl
	rule__TObjectPrototype__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getLeftCurlyBracketKeyword_9()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTObjectPrototypeAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__10__Impl
	rule__TObjectPrototype__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersAssignment_10()); }
(rule__TObjectPrototype__OwnedMembersAssignment_10)*
{ after(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__11__Impl
	rule__TObjectPrototype__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup_11()); }
(rule__TObjectPrototype__Group_11__0)?
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group__12__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getRightCurlyBracketKeyword_12()); }

	RightCurlyBracket 

{ after(grammarAccess.getTObjectPrototypeAccess().getRightCurlyBracketKeyword_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}




























rule__TObjectPrototype__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5__0__Impl
	rule__TObjectPrototype__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getLessThanSignKeyword_5_0()); }

	LessThanSign 

{ after(grammarAccess.getTObjectPrototypeAccess().getLessThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5__1__Impl
	rule__TObjectPrototype__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getTypeVarsAssignment_5_1()); }
(rule__TObjectPrototype__TypeVarsAssignment_5_1)
{ after(grammarAccess.getTObjectPrototypeAccess().getTypeVarsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5__2__Impl
	rule__TObjectPrototype__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGroup_5_2()); }
(rule__TObjectPrototype__Group_5_2__0)*
{ after(grammarAccess.getTObjectPrototypeAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getGreaterThanSignKeyword_5_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTObjectPrototypeAccess().getGreaterThanSignKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TObjectPrototype__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5_2__0__Impl
	rule__TObjectPrototype__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getCommaKeyword_5_2_0()); }

	Comma 

{ after(grammarAccess.getTObjectPrototypeAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getTypeVarsAssignment_5_2_1()); }
(rule__TObjectPrototype__TypeVarsAssignment_5_2_1)
{ after(grammarAccess.getTObjectPrototypeAccess().getTypeVarsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TObjectPrototype__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_6__0__Impl
	rule__TObjectPrototype__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getExtendsKeyword_6_0()); }

	Extends 

{ after(grammarAccess.getTObjectPrototypeAccess().getExtendsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getSuperTypeAssignment_6_1()); }
(rule__TObjectPrototype__SuperTypeAssignment_6_1)
{ after(grammarAccess.getTObjectPrototypeAccess().getSuperTypeAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TObjectPrototype__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_7__0__Impl
	rule__TObjectPrototype__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getIndexedKeyword_7_0()); }

	Indexed 

{ after(grammarAccess.getTObjectPrototypeAccess().getIndexedKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_7__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredElementTypeAssignment_7_1()); }
(rule__TObjectPrototype__DeclaredElementTypeAssignment_7_1)
{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredElementTypeAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TObjectPrototype__Group_11__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_11__0__Impl
	rule__TObjectPrototype__Group_11__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_11__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getCallableCtorAssignment_11_0()); }
(rule__TObjectPrototype__CallableCtorAssignment_11_0)
{ after(grammarAccess.getTObjectPrototypeAccess().getCallableCtorAssignment_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TObjectPrototype__Group_11__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TObjectPrototype__Group_11__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__Group_11__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersAssignment_11_1()); }
(rule__TObjectPrototype__OwnedMembersAssignment_11_1)*
{ after(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersAssignment_11_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VirtualBaseType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__0__Impl
	rule__VirtualBaseType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getVirtualBaseTypeAction_0()); }
(

)
{ after(grammarAccess.getVirtualBaseTypeAccess().getVirtualBaseTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualBaseType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__1__Impl
	rule__VirtualBaseType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getVirtualBaseKeyword_1()); }

	VirtualBase 

{ after(grammarAccess.getVirtualBaseTypeAccess().getVirtualBaseKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualBaseType__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__2__Impl
	rule__VirtualBaseType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getNameAssignment_2()); }
(rule__VirtualBaseType__NameAssignment_2)
{ after(grammarAccess.getVirtualBaseTypeAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualBaseType__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__3__Impl
	rule__VirtualBaseType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getLeftCurlyBracketKeyword_3()); }

	LeftCurlyBracket 

{ after(grammarAccess.getVirtualBaseTypeAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualBaseType__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__4__Impl
	rule__VirtualBaseType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getOwnedMembersAssignment_4()); }
(rule__VirtualBaseType__OwnedMembersAssignment_4)*
{ after(grammarAccess.getVirtualBaseTypeAccess().getOwnedMembersAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VirtualBaseType__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VirtualBaseType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getRightCurlyBracketKeyword_5()); }

	RightCurlyBracket 

{ after(grammarAccess.getVirtualBaseTypeAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TClass__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__0__Impl
	rule__TClass__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredTypeAccessModifierAssignment_0()); }
(rule__TClass__DeclaredTypeAccessModifierAssignment_0)
{ after(grammarAccess.getTClassAccess().getDeclaredTypeAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__1__Impl
	rule__TClass__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
(rule__TClass__DeclaredProvidedByRuntimeAssignment_1)?
{ after(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__2__Impl
	rule__TClass__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredAbstractAssignment_2()); }
(rule__TClass__DeclaredAbstractAssignment_2)?
{ after(grammarAccess.getTClassAccess().getDeclaredAbstractAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__3__Impl
	rule__TClass__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredFinalAssignment_3()); }
(rule__TClass__DeclaredFinalAssignment_3)?
{ after(grammarAccess.getTClassAccess().getDeclaredFinalAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__4__Impl
	rule__TClass__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getClassKeyword_4()); }

	Class 

{ after(grammarAccess.getTClassAccess().getClassKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__5__Impl
	rule__TClass__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypingStrategyAssignment_5()); }
(rule__TClass__TypingStrategyAssignment_5)?
{ after(grammarAccess.getTClassAccess().getTypingStrategyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__6__Impl
	rule__TClass__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getNameAssignment_6()); }
(rule__TClass__NameAssignment_6)
{ after(grammarAccess.getTClassAccess().getNameAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__7__Impl
	rule__TClass__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_7()); }
(rule__TClass__Group_7__0)?
{ after(grammarAccess.getTClassAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__8__Impl
	rule__TClass__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_8()); }
(rule__TClass__Group_8__0)?
{ after(grammarAccess.getTClassAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__9__Impl
	rule__TClass__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_9()); }
(rule__TClass__Group_9__0)?
{ after(grammarAccess.getTClassAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__10__Impl
	rule__TClass__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getAnnotationsAssignment_10()); }
(rule__TClass__AnnotationsAssignment_10)*
{ after(grammarAccess.getTClassAccess().getAnnotationsAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__11__Impl
	rule__TClass__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getLeftCurlyBracketKeyword_11()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTClassAccess().getLeftCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__12
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__12__Impl
	rule__TClass__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__12__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getOwnedMembersAssignment_12()); }
(rule__TClass__OwnedMembersAssignment_12)*
{ after(grammarAccess.getTClassAccess().getOwnedMembersAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__13
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__13__Impl
	rule__TClass__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__13__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_13()); }
(rule__TClass__Group_13__0)?
{ after(grammarAccess.getTClassAccess().getGroup_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group__14
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group__14__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group__14__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getRightCurlyBracketKeyword_14()); }

	RightCurlyBracket 

{ after(grammarAccess.getTClassAccess().getRightCurlyBracketKeyword_14()); }
)

;
finally {
	restoreStackSize(stackSize);
}
































rule__TClass__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7__0__Impl
	rule__TClass__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getLessThanSignKeyword_7_0()); }

	LessThanSign 

{ after(grammarAccess.getTClassAccess().getLessThanSignKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7__1__Impl
	rule__TClass__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypeVarsAssignment_7_1()); }
(rule__TClass__TypeVarsAssignment_7_1)
{ after(grammarAccess.getTClassAccess().getTypeVarsAssignment_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7__2__Impl
	rule__TClass__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_7_2()); }
(rule__TClass__Group_7_2__0)*
{ after(grammarAccess.getTClassAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_7__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGreaterThanSignKeyword_7_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTClassAccess().getGreaterThanSignKeyword_7_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TClass__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7_2__0__Impl
	rule__TClass__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getCommaKeyword_7_2_0()); }

	Comma 

{ after(grammarAccess.getTClassAccess().getCommaKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypeVarsAssignment_7_2_1()); }
(rule__TClass__TypeVarsAssignment_7_2_1)
{ after(grammarAccess.getTClassAccess().getTypeVarsAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TClass__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_8__0__Impl
	rule__TClass__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getExtendsKeyword_8_0()); }

	Extends 

{ after(grammarAccess.getTClassAccess().getExtendsKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getSuperClassRefAssignment_8_1()); }
(rule__TClass__SuperClassRefAssignment_8_1)
{ after(grammarAccess.getTClassAccess().getSuperClassRefAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TClass__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_9__0__Impl
	rule__TClass__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getImplementsKeyword_9_0()); }

	Implements 

{ after(grammarAccess.getTClassAccess().getImplementsKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_9__1__Impl
	rule__TClass__Group_9__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getImplementedInterfaceRefsAssignment_9_1()); }
(rule__TClass__ImplementedInterfaceRefsAssignment_9_1)
{ after(grammarAccess.getTClassAccess().getImplementedInterfaceRefsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_9__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_9__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_9__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getGroup_9_2()); }
(rule__TClass__Group_9_2__0)*
{ after(grammarAccess.getTClassAccess().getGroup_9_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TClass__Group_9_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_9_2__0__Impl
	rule__TClass__Group_9_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_9_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getCommaKeyword_9_2_0()); }

	Comma 

{ after(grammarAccess.getTClassAccess().getCommaKeyword_9_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_9_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_9_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_9_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getImplementedInterfaceRefsAssignment_9_2_1()); }
(rule__TClass__ImplementedInterfaceRefsAssignment_9_2_1)
{ after(grammarAccess.getTClassAccess().getImplementedInterfaceRefsAssignment_9_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TClass__Group_13__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_13__0__Impl
	rule__TClass__Group_13__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_13__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getCallableCtorAssignment_13_0()); }
(rule__TClass__CallableCtorAssignment_13_0)
{ after(grammarAccess.getTClassAccess().getCallableCtorAssignment_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TClass__Group_13__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TClass__Group_13__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__Group_13__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getOwnedMembersAssignment_13_1()); }
(rule__TClass__OwnedMembersAssignment_13_1)*
{ after(grammarAccess.getTClassAccess().getOwnedMembersAssignment_13_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TInterface__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__0__Impl
	rule__TInterface__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getDeclaredTypeAccessModifierAssignment_0()); }
(rule__TInterface__DeclaredTypeAccessModifierAssignment_0)
{ after(grammarAccess.getTInterfaceAccess().getDeclaredTypeAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__1__Impl
	rule__TInterface__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
(rule__TInterface__DeclaredProvidedByRuntimeAssignment_1)?
{ after(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__2__Impl
	rule__TInterface__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getInterfaceKeyword_2()); }

	Interface 

{ after(grammarAccess.getTInterfaceAccess().getInterfaceKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__3__Impl
	rule__TInterface__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypingStrategyAssignment_3()); }
(rule__TInterface__TypingStrategyAssignment_3)?
{ after(grammarAccess.getTInterfaceAccess().getTypingStrategyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__4__Impl
	rule__TInterface__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getNameAssignment_4()); }
(rule__TInterface__NameAssignment_4)
{ after(grammarAccess.getTInterfaceAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__5__Impl
	rule__TInterface__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getGroup_5()); }
(rule__TInterface__Group_5__0)?
{ after(grammarAccess.getTInterfaceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__6__Impl
	rule__TInterface__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getGroup_6()); }
(rule__TInterface__Group_6__0)?
{ after(grammarAccess.getTInterfaceAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__7__Impl
	rule__TInterface__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getAnnotationsAssignment_7()); }
(rule__TInterface__AnnotationsAssignment_7)*
{ after(grammarAccess.getTInterfaceAccess().getAnnotationsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__8__Impl
	rule__TInterface__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getLeftCurlyBracketKeyword_8()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTInterfaceAccess().getLeftCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__9__Impl
	rule__TInterface__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getOwnedMembersAssignment_9()); }
(rule__TInterface__OwnedMembersAssignment_9)*
{ after(grammarAccess.getTInterfaceAccess().getOwnedMembersAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getRightCurlyBracketKeyword_10()); }

	RightCurlyBracket 

{ after(grammarAccess.getTInterfaceAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TInterface__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5__0__Impl
	rule__TInterface__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getLessThanSignKeyword_5_0()); }

	LessThanSign 

{ after(grammarAccess.getTInterfaceAccess().getLessThanSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5__1__Impl
	rule__TInterface__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypeVarsAssignment_5_1()); }
(rule__TInterface__TypeVarsAssignment_5_1)
{ after(grammarAccess.getTInterfaceAccess().getTypeVarsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5__2__Impl
	rule__TInterface__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getGroup_5_2()); }
(rule__TInterface__Group_5_2__0)*
{ after(grammarAccess.getTInterfaceAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getGreaterThanSignKeyword_5_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTInterfaceAccess().getGreaterThanSignKeyword_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TInterface__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5_2__0__Impl
	rule__TInterface__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getCommaKeyword_5_2_0()); }

	Comma 

{ after(grammarAccess.getTInterfaceAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypeVarsAssignment_5_2_1()); }
(rule__TInterface__TypeVarsAssignment_5_2_1)
{ after(grammarAccess.getTInterfaceAccess().getTypeVarsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TInterface__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_6__0__Impl
	rule__TInterface__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getExtendsKeyword_6_0()); }

	Extends 

{ after(grammarAccess.getTInterfaceAccess().getExtendsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_6__1__Impl
	rule__TInterface__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsAssignment_6_1()); }
(rule__TInterface__SuperInterfaceRefsAssignment_6_1)
{ after(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getGroup_6_2()); }
(rule__TInterface__Group_6_2__0)*
{ after(grammarAccess.getTInterfaceAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TInterface__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_6_2__0__Impl
	rule__TInterface__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getCommaKeyword_6_2_0()); }

	Comma 

{ after(grammarAccess.getTInterfaceAccess().getCommaKeyword_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TInterface__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TInterface__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsAssignment_6_2_1()); }
(rule__TInterface__SuperInterfaceRefsAssignment_6_2_1)
{ after(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsAssignment_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallableCtor__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__0__Impl
	rule__CallableCtor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getTMethodAction_0()); }
(

)
{ after(grammarAccess.getCallableCtorAccess().getTMethodAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__1__Impl
	rule__CallableCtor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getCallableCtorAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__2__Impl
	rule__CallableCtor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getGroup_2()); }
(rule__CallableCtor__Group_2__0)?
{ after(grammarAccess.getCallableCtorAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__3__Impl
	rule__CallableCtor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getCallableCtorAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__4__Impl
	rule__CallableCtor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getGroup_4()); }
(rule__CallableCtor__Group_4__0)?
{ after(grammarAccess.getCallableCtorAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getSemicolonKeyword_5()); }
(
	Semicolon 
)?
{ after(grammarAccess.getCallableCtorAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CallableCtor__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_2__0__Impl
	rule__CallableCtor__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getFparsAssignment_2_0()); }
(rule__CallableCtor__FparsAssignment_2_0)
{ after(grammarAccess.getCallableCtorAccess().getFparsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getGroup_2_1()); }
(rule__CallableCtor__Group_2_1__0)*
{ after(grammarAccess.getCallableCtorAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallableCtor__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_2_1__0__Impl
	rule__CallableCtor__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getCommaKeyword_2_1_0()); }

	Comma 

{ after(grammarAccess.getCallableCtorAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getFparsAssignment_2_1_1()); }
(rule__CallableCtor__FparsAssignment_2_1_1)
{ after(grammarAccess.getCallableCtorAccess().getFparsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CallableCtor__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_4__0__Impl
	rule__CallableCtor__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getColonKeyword_4_0()); }

	Colon 

{ after(grammarAccess.getCallableCtorAccess().getColonKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallableCtor__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallableCtor__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getReturnTypeRefAssignment_4_1()); }
(rule__CallableCtor__ReturnTypeRefAssignment_4_1)
{ after(grammarAccess.getCallableCtorAccess().getReturnTypeRefAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__0__Impl
	rule__TMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_0()); }
(rule__TMethod__Group_0__0)
{ after(grammarAccess.getTMethodAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__1__Impl
	rule__TMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_1()); }
(rule__TMethod__Group_1__0)?
{ after(grammarAccess.getTMethodAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__2__Impl
	rule__TMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getTMethodAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__3__Impl
	rule__TMethod__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getColonKeyword_3()); }

	Colon 

{ after(grammarAccess.getTMethodAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__4__Impl
	rule__TMethod__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getReturnTypeRefAssignment_4()); }
(rule__TMethod__ReturnTypeRefAssignment_4)
{ after(grammarAccess.getTMethodAccess().getReturnTypeRefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getSemicolonKeyword_5()); }
(
	Semicolon 
)?
{ after(grammarAccess.getTMethodAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TMethod__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_0_0()); }
(rule__TMethod__Group_0_0__0)
{ after(grammarAccess.getTMethodAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TMethod__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0__0__Impl
	rule__TMethod__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getDeclaredMemberAccessModifierAssignment_0_0_0()); }
(rule__TMethod__DeclaredMemberAccessModifierAssignment_0_0_0)
{ after(grammarAccess.getTMethodAccess().getDeclaredMemberAccessModifierAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0__1__Impl
	rule__TMethod__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getAlternatives_0_0_1()); }
(rule__TMethod__Alternatives_0_0_1)?
{ after(grammarAccess.getTMethodAccess().getAlternatives_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0__2__Impl
	rule__TMethod__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_0_0_2()); }
(rule__TMethod__Group_0_0_2__0)?
{ after(grammarAccess.getTMethodAccess().getGroup_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0__3__Impl
	rule__TMethod__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getAlternatives_0_0_3()); }
(rule__TMethod__Alternatives_0_0_3)
{ after(grammarAccess.getTMethodAccess().getAlternatives_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getLeftParenthesisKeyword_0_0_4()); }

	LeftParenthesis 

{ after(grammarAccess.getTMethodAccess().getLeftParenthesisKeyword_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TMethod__Group_0_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2__0__Impl
	rule__TMethod__Group_0_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getLessThanSignKeyword_0_0_2_0()); }

	LessThanSign 

{ after(grammarAccess.getTMethodAccess().getLessThanSignKeyword_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2__1__Impl
	rule__TMethod__Group_0_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getTypeVarsAssignment_0_0_2_1()); }
(rule__TMethod__TypeVarsAssignment_0_0_2_1)
{ after(grammarAccess.getTMethodAccess().getTypeVarsAssignment_0_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2__2__Impl
	rule__TMethod__Group_0_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_0_0_2_2()); }
(rule__TMethod__Group_0_0_2_2__0)*
{ after(grammarAccess.getTMethodAccess().getGroup_0_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGreaterThanSignKeyword_0_0_2_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTMethodAccess().getGreaterThanSignKeyword_0_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TMethod__Group_0_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2_2__0__Impl
	rule__TMethod__Group_0_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getCommaKeyword_0_0_2_2_0()); }

	Comma 

{ after(grammarAccess.getTMethodAccess().getCommaKeyword_0_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_0_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_0_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_0_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getTypeVarsAssignment_0_0_2_2_1()); }
(rule__TMethod__TypeVarsAssignment_0_0_2_2_1)
{ after(grammarAccess.getTMethodAccess().getTypeVarsAssignment_0_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TMethod__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_1__0__Impl
	rule__TMethod__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getFparsAssignment_1_0()); }
(rule__TMethod__FparsAssignment_1_0)
{ after(grammarAccess.getTMethodAccess().getFparsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getGroup_1_1()); }
(rule__TMethod__Group_1_1__0)*
{ after(grammarAccess.getTMethodAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TMethod__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_1_1__0__Impl
	rule__TMethod__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getCommaKeyword_1_1_0()); }

	Comma 

{ after(grammarAccess.getTMethodAccess().getCommaKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TMethod__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TMethod__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getFparsAssignment_1_1_1()); }
(rule__TMethod__FparsAssignment_1_1_1)
{ after(grammarAccess.getTMethodAccess().getFparsAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__0__Impl
	rule__TField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getDeclaredMemberAccessModifierAssignment_0()); }
(rule__TField__DeclaredMemberAccessModifierAssignment_0)
{ after(grammarAccess.getTFieldAccess().getDeclaredMemberAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__1__Impl
	rule__TField__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getAlternatives_1()); }
(rule__TField__Alternatives_1)?
{ after(grammarAccess.getTFieldAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TField__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__2__Impl
	rule__TField__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getAlternatives_2()); }
(rule__TField__Alternatives_2)
{ after(grammarAccess.getTFieldAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TField__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__3__Impl
	rule__TField__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getColonKeyword_3()); }

	Colon 

{ after(grammarAccess.getTFieldAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TField__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__4__Impl
	rule__TField__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getTypeRefAssignment_4()); }
(rule__TField__TypeRefAssignment_4)
{ after(grammarAccess.getTFieldAccess().getTypeRefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TField__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TField__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TField__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getSemicolonKeyword_5()); }
(
	Semicolon 
)?
{ after(grammarAccess.getTFieldAccess().getSemicolonKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__TGetter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group__0__Impl
	rule__TGetter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getGroup_0()); }
(rule__TGetter__Group_0__0)
{ after(grammarAccess.getTGetterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group__1__Impl
	rule__TGetter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getTGetterAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group__2__Impl
	rule__TGetter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getTGetterAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group__3__Impl
	rule__TGetter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getColonKeyword_3()); }

	Colon 

{ after(grammarAccess.getTGetterAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredTypeRefAssignment_4()); }
(rule__TGetter__DeclaredTypeRefAssignment_4)
{ after(grammarAccess.getTGetterAccess().getDeclaredTypeRefAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TGetter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getGroup_0_0()); }
(rule__TGetter__Group_0_0__0)
{ after(grammarAccess.getTGetterAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TGetter__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0_0__0__Impl
	rule__TGetter__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getTGetterAction_0_0_0()); }
(

)
{ after(grammarAccess.getTGetterAccess().getTGetterAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0_0__1__Impl
	rule__TGetter__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredMemberAccessModifierAssignment_0_0_1()); }
(rule__TGetter__DeclaredMemberAccessModifierAssignment_0_0_1)
{ after(grammarAccess.getTGetterAccess().getDeclaredMemberAccessModifierAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0_0__2__Impl
	rule__TGetter__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getAlternatives_0_0_2()); }
(rule__TGetter__Alternatives_0_0_2)?
{ after(grammarAccess.getTGetterAccess().getAlternatives_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0_0__3__Impl
	rule__TGetter__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getGetKeyword_0_0_3()); }

	Get 

{ after(grammarAccess.getTGetterAccess().getGetKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TGetter__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TGetter__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getAlternatives_0_0_4()); }
(rule__TGetter__Alternatives_0_0_4)
{ after(grammarAccess.getTGetterAccess().getAlternatives_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TSetter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group__0__Impl
	rule__TSetter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getGroup_0()); }
(rule__TSetter__Group_0__0)
{ after(grammarAccess.getTSetterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group__1__Impl
	rule__TSetter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getTSetterAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group__2__Impl
	rule__TSetter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getFparAssignment_2()); }
(rule__TSetter__FparAssignment_2)
{ after(grammarAccess.getTSetterAccess().getFparAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getTSetterAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TSetter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getGroup_0_0()); }
(rule__TSetter__Group_0_0__0)
{ after(grammarAccess.getTSetterAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TSetter__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0_0__0__Impl
	rule__TSetter__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getTSetterAction_0_0_0()); }
(

)
{ after(grammarAccess.getTSetterAccess().getTSetterAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0_0__1__Impl
	rule__TSetter__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getDeclaredMemberAccessModifierAssignment_0_0_1()); }
(rule__TSetter__DeclaredMemberAccessModifierAssignment_0_0_1)
{ after(grammarAccess.getTSetterAccess().getDeclaredMemberAccessModifierAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0_0__2__Impl
	rule__TSetter__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getAlternatives_0_0_2()); }
(rule__TSetter__Alternatives_0_0_2)?
{ after(grammarAccess.getTSetterAccess().getAlternatives_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0_0__3__Impl
	rule__TSetter__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getSetKeyword_0_0_3()); }

	Set 

{ after(grammarAccess.getTSetterAccess().getSetKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TSetter__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TSetter__Group_0_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getAlternatives_0_0_4()); }
(rule__TSetter__Alternatives_0_0_4)
{ after(grammarAccess.getTSetterAccess().getAlternatives_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__0__Impl
	rule__TFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getDeclaredTypeAccessModifierAssignment_0()); }
(rule__TFunction__DeclaredTypeAccessModifierAssignment_0)
{ after(grammarAccess.getTFunctionAccess().getDeclaredTypeAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__1__Impl
	rule__TFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
(rule__TFunction__DeclaredProvidedByRuntimeAssignment_1)?
{ after(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__2__Impl
	rule__TFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getFunctionKeyword_2()); }

	Function 

{ after(grammarAccess.getTFunctionAccess().getFunctionKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__3__Impl
	rule__TFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getGroup_3()); }
(rule__TFunction__Group_3__0)?
{ after(grammarAccess.getTFunctionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__4__Impl
	rule__TFunction__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getNameAssignment_4()); }
(rule__TFunction__NameAssignment_4)
{ after(grammarAccess.getTFunctionAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__5__Impl
	rule__TFunction__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getLeftParenthesisKeyword_5()); }

	LeftParenthesis 

{ after(grammarAccess.getTFunctionAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__6__Impl
	rule__TFunction__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getGroup_6()); }
(rule__TFunction__Group_6__0)?
{ after(grammarAccess.getTFunctionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__7__Impl
	rule__TFunction__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getRightParenthesisKeyword_7()); }

	RightParenthesis 

{ after(grammarAccess.getTFunctionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__8__Impl
	rule__TFunction__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getColonKeyword_8()); }

	Colon 

{ after(grammarAccess.getTFunctionAccess().getColonKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getReturnTypeRefAssignment_9()); }
(rule__TFunction__ReturnTypeRefAssignment_9)
{ after(grammarAccess.getTFunctionAccess().getReturnTypeRefAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__TFunction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3__0__Impl
	rule__TFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getLessThanSignKeyword_3_0()); }

	LessThanSign 

{ after(grammarAccess.getTFunctionAccess().getLessThanSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3__1__Impl
	rule__TFunction__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getTypeVarsAssignment_3_1()); }
(rule__TFunction__TypeVarsAssignment_3_1)
{ after(grammarAccess.getTFunctionAccess().getTypeVarsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3__2__Impl
	rule__TFunction__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getGroup_3_2()); }
(rule__TFunction__Group_3_2__0)*
{ after(grammarAccess.getTFunctionAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getGreaterThanSignKeyword_3_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTFunctionAccess().getGreaterThanSignKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TFunction__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3_2__0__Impl
	rule__TFunction__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getCommaKeyword_3_2_0()); }

	Comma 

{ after(grammarAccess.getTFunctionAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getTypeVarsAssignment_3_2_1()); }
(rule__TFunction__TypeVarsAssignment_3_2_1)
{ after(grammarAccess.getTFunctionAccess().getTypeVarsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TFunction__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_6__0__Impl
	rule__TFunction__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getFparsAssignment_6_0()); }
(rule__TFunction__FparsAssignment_6_0)
{ after(grammarAccess.getTFunctionAccess().getFparsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getGroup_6_1()); }
(rule__TFunction__Group_6_1__0)*
{ after(grammarAccess.getTFunctionAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TFunction__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_6_1__0__Impl
	rule__TFunction__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getCommaKeyword_6_1_0()); }

	Comma 

{ after(grammarAccess.getTFunctionAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFunction__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFunction__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getFparsAssignment_6_1_1()); }
(rule__TFunction__FparsAssignment_6_1_1)
{ after(grammarAccess.getTFunctionAccess().getFparsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TEnum__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__0__Impl
	rule__TEnum__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getDeclaredTypeAccessModifierAssignment_0()); }
(rule__TEnum__DeclaredTypeAccessModifierAssignment_0)
{ after(grammarAccess.getTEnumAccess().getDeclaredTypeAccessModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__1__Impl
	rule__TEnum__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
(rule__TEnum__DeclaredProvidedByRuntimeAssignment_1)?
{ after(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__2__Impl
	rule__TEnum__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getEnumKeyword_2()); }

	Enum 

{ after(grammarAccess.getTEnumAccess().getEnumKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__3__Impl
	rule__TEnum__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getNameAssignment_3()); }
(rule__TEnum__NameAssignment_3)
{ after(grammarAccess.getTEnumAccess().getNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__4__Impl
	rule__TEnum__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getLeftCurlyBracketKeyword_4()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTEnumAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__5__Impl
	rule__TEnum__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getLiteralsAssignment_5()); }
(rule__TEnum__LiteralsAssignment_5)
{ after(grammarAccess.getTEnumAccess().getLiteralsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__6__Impl
	rule__TEnum__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getGroup_6()); }
(rule__TEnum__Group_6__0)*
{ after(grammarAccess.getTEnumAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getRightCurlyBracketKeyword_7()); }

	RightCurlyBracket 

{ after(grammarAccess.getTEnumAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__TEnum__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group_6__0__Impl
	rule__TEnum__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getCommaKeyword_6_0()); }

	Comma 

{ after(grammarAccess.getTEnumAccess().getCommaKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TEnum__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TEnum__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getLiteralsAssignment_6_1()); }
(rule__TEnum__LiteralsAssignment_6_1)
{ after(grammarAccess.getTEnumAccess().getLiteralsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRefWithoutModifiers__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRefWithoutModifiers__Group_0__0__Impl
	rule__TypeRefWithoutModifiers__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefWithoutModifiers__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getAlternatives_0_0()); }
(rule__TypeRefWithoutModifiers__Alternatives_0_0)
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRefWithoutModifiers__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRefWithoutModifiers__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefWithoutModifiers__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicAssignment_0_1()); }
(rule__TypeRefWithoutModifiers__DynamicAssignment_0_1)?
{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThisTypeRefNominal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefNominal__Group__0__Impl
	rule__ThisTypeRefNominal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefNominal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefNominalAccess().getThisTypeRefNominalAction_0()); }
(

)
{ after(grammarAccess.getThisTypeRefNominalAccess().getThisTypeRefNominalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisTypeRefNominal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefNominal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefNominal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefNominalAccess().getThisKeyword_1()); }

	This_1 

{ after(grammarAccess.getThisTypeRefNominalAccess().getThisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ThisTypeRefStructural__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefStructural__Group__0__Impl
	rule__ThisTypeRefStructural__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyAssignment_0()); }
(rule__ThisTypeRefStructural__DefinedTypingStrategyAssignment_0)
{ after(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisTypeRefStructural__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefStructural__Group__1__Impl
	rule__ThisTypeRefStructural__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getThisKeyword_1()); }

	This_1 

{ after(grammarAccess.getThisTypeRefStructuralAccess().getThisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisTypeRefStructural__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefStructural__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getGroup_2()); }
(rule__ThisTypeRefStructural__Group_2__0)?
{ after(grammarAccess.getThisTypeRefStructuralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ThisTypeRefStructural__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefStructural__Group_2__0__Impl
	rule__ThisTypeRefStructural__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getWithKeyword_2_0()); }

	With 

{ after(grammarAccess.getThisTypeRefStructuralAccess().getWithKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThisTypeRefStructural__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThisTypeRefStructural__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getTStructMemberListParserRuleCall_2_1()); }
	ruleTStructMemberList
{ after(grammarAccess.getThisTypeRefStructuralAccess().getTStructMemberListParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__0__Impl
	rule__FunctionTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getFunctionTypeExpressionAction_0()); }
(

)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getFunctionTypeExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__1__Impl
	rule__FunctionTypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getLeftCurlyBracketKeyword_1()); }

	LeftCurlyBracket 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__2__Impl
	rule__FunctionTypeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGroup_2()); }
(rule__FunctionTypeExpression__Group_2__0)?
{ after(grammarAccess.getFunctionTypeExpressionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__3__Impl
	rule__FunctionTypeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getFunctionKeyword_3()); }

	Function 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getFunctionKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__4__Impl
	rule__FunctionTypeExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGroup_4()); }
(rule__FunctionTypeExpression__Group_4__0)?
{ after(grammarAccess.getFunctionTypeExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__5__Impl
	rule__FunctionTypeExpression__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getLeftParenthesisKeyword_5()); }

	LeftParenthesis 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__6__Impl
	rule__FunctionTypeExpression__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_6()); }
	ruleTAnonymousFormalParameterList
{ after(grammarAccess.getFunctionTypeExpressionAccess().getTAnonymousFormalParameterListParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__7__Impl
	rule__FunctionTypeExpression__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getRightParenthesisKeyword_7()); }

	RightParenthesis 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__8__Impl
	rule__FunctionTypeExpression__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGroup_8()); }
(rule__FunctionTypeExpression__Group_8__0)?
{ after(grammarAccess.getFunctionTypeExpressionAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getRightCurlyBracketKeyword_9()); }

	RightCurlyBracket 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getRightCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__FunctionTypeExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_2__0__Impl
	rule__FunctionTypeExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getCommercialAtKeyword_2_0()); }

	CommercialAt 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getCommercialAtKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_2__1__Impl
	rule__FunctionTypeExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getThisKeyword_2_1()); }

	This 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getThisKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_2__2__Impl
	rule__FunctionTypeExpression__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getLeftParenthesisKeyword_2_2()); }

	LeftParenthesis 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getLeftParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_2__3__Impl
	rule__FunctionTypeExpression__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getDeclaredThisTypeAssignment_2_3()); }
(rule__FunctionTypeExpression__DeclaredThisTypeAssignment_2_3)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getDeclaredThisTypeAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getRightParenthesisKeyword_2_4()); }

	RightParenthesis 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getRightParenthesisKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionTypeExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4__0__Impl
	rule__FunctionTypeExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getLessThanSignKeyword_4_0()); }

	LessThanSign 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getLessThanSignKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4__1__Impl
	rule__FunctionTypeExpression__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsAssignment_4_1()); }
(rule__FunctionTypeExpression__OwnedTypeVarsAssignment_4_1)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4__2__Impl
	rule__FunctionTypeExpression__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGroup_4_2()); }
(rule__FunctionTypeExpression__Group_4_2__0)*
{ after(grammarAccess.getFunctionTypeExpressionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getGreaterThanSignKeyword_4_3()); }

	GreaterThanSign 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getGreaterThanSignKeyword_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionTypeExpression__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4_2__0__Impl
	rule__FunctionTypeExpression__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getCommaKeyword_4_2_0()); }

	Comma 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsAssignment_4_2_1()); }
(rule__FunctionTypeExpression__OwnedTypeVarsAssignment_4_2_1)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionTypeExpression__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_8__0__Impl
	rule__FunctionTypeExpression__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getColonKeyword_8_0()); }

	Colon 

{ after(grammarAccess.getFunctionTypeExpressionAccess().getColonKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionTypeExpression__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionTypeExpression__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getReturnTypeRefAssignment_8_1()); }
(rule__FunctionTypeExpression__ReturnTypeRefAssignment_8_1)
{ after(grammarAccess.getFunctionTypeExpressionAccess().getReturnTypeRefAssignment_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnonymousFormalParameterList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameterList__Group__0__Impl
	rule__TAnonymousFormalParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsAssignment_0()); }
(rule__TAnonymousFormalParameterList__FparsAssignment_0)
{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnonymousFormalParameterList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameterList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getGroup_1()); }
(rule__TAnonymousFormalParameterList__Group_1__0)*
{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnonymousFormalParameterList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameterList__Group_1__0__Impl
	rule__TAnonymousFormalParameterList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getCommaKeyword_1_0()); }

	Comma 

{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnonymousFormalParameterList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameterList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsAssignment_1_1()); }
(rule__TAnonymousFormalParameterList__FparsAssignment_1_1)
{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TAnonymousFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameter__Group__0__Impl
	rule__TAnonymousFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicAssignment_0()); }
(rule__TAnonymousFormalParameter__VariadicAssignment_0)?
{ after(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnonymousFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameter__Group__1__Impl
	rule__TAnonymousFormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getGroup_1()); }
(rule__TAnonymousFormalParameter__Group_1__0)?
{ after(grammarAccess.getTAnonymousFormalParameterAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnonymousFormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefAssignment_2()); }
(rule__TAnonymousFormalParameter__TypeRefAssignment_2)
{ after(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TAnonymousFormalParameter__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameter__Group_1__0__Impl
	rule__TAnonymousFormalParameter__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getNameAssignment_1_0()); }
(rule__TAnonymousFormalParameter__NameAssignment_1_0)
{ after(grammarAccess.getTAnonymousFormalParameterAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TAnonymousFormalParameter__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TAnonymousFormalParameter__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getColonKeyword_1_1()); }

	Colon 

{ after(grammarAccess.getTAnonymousFormalParameterAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TFormalParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFormalParameter__Group__0__Impl
	rule__TFormalParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getVariadicAssignment_0()); }
(rule__TFormalParameter__VariadicAssignment_0)?
{ after(grammarAccess.getTFormalParameterAccess().getVariadicAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFormalParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFormalParameter__Group__1__Impl
	rule__TFormalParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getNameAssignment_1()); }
(rule__TFormalParameter__NameAssignment_1)
{ after(grammarAccess.getTFormalParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFormalParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFormalParameter__Group__2__Impl
	rule__TFormalParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getColonKeyword_2()); }

	Colon 

{ after(grammarAccess.getTFormalParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TFormalParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TFormalParameter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getTypeRefAssignment_3()); }
(rule__TFormalParameter__TypeRefAssignment_3)
{ after(grammarAccess.getTFormalParameterAccess().getTypeRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__UnionTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__0__Impl
	rule__UnionTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getUnionTypeExpressionAction_0()); }
(

)
{ after(grammarAccess.getUnionTypeExpressionAccess().getUnionTypeExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__1__Impl
	rule__UnionTypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getUnionKeyword_1()); }

	Union 

{ after(grammarAccess.getUnionTypeExpressionAccess().getUnionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__2__Impl
	rule__UnionTypeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getUnionTypeExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__3__Impl
	rule__UnionTypeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsAssignment_3()); }
(rule__UnionTypeExpression__TypeRefsAssignment_3)
{ after(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__4__Impl
	rule__UnionTypeExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getGroup_4()); }
(rule__UnionTypeExpression__Group_4__0)*
{ after(grammarAccess.getUnionTypeExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getRightCurlyBracketKeyword_5()); }

	RightCurlyBracket 

{ after(grammarAccess.getUnionTypeExpressionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__UnionTypeExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group_4__0__Impl
	rule__UnionTypeExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getCommaKeyword_4_0()); }

	Comma 

{ after(grammarAccess.getUnionTypeExpressionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnionTypeExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnionTypeExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsAssignment_4_1()); }
(rule__UnionTypeExpression__TypeRefsAssignment_4_1)
{ after(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IntersectionTypeExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__0__Impl
	rule__IntersectionTypeExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionTypeExpressionAction_0()); }
(

)
{ after(grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionTypeExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__1__Impl
	rule__IntersectionTypeExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionKeyword_1()); }

	Intersection 

{ after(grammarAccess.getIntersectionTypeExpressionAccess().getIntersectionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__2__Impl
	rule__IntersectionTypeExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getIntersectionTypeExpressionAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__3__Impl
	rule__IntersectionTypeExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsAssignment_3()); }
(rule__IntersectionTypeExpression__TypeRefsAssignment_3)
{ after(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__4__Impl
	rule__IntersectionTypeExpression__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getGroup_4()); }
(rule__IntersectionTypeExpression__Group_4__0)*
{ after(grammarAccess.getIntersectionTypeExpressionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getRightCurlyBracketKeyword_5()); }

	RightCurlyBracket 

{ after(grammarAccess.getIntersectionTypeExpressionAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IntersectionTypeExpression__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group_4__0__Impl
	rule__IntersectionTypeExpression__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getCommaKeyword_4_0()); }

	Comma 

{ after(grammarAccess.getIntersectionTypeExpressionAccess().getCommaKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IntersectionTypeExpression__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IntersectionTypeExpression__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsAssignment_4_1()); }
(rule__IntersectionTypeExpression__TypeRefsAssignment_4_1)
{ after(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterizedTypeRefStructural__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group__0__Impl
	rule__ParameterizedTypeRefStructural__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyAssignment_0()); }
(rule__ParameterizedTypeRefStructural__DefinedTypingStrategyAssignment_0)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group__1__Impl
	rule__ParameterizedTypeRefStructural__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeAssignment_1()); }
(rule__ParameterizedTypeRefStructural__DeclaredTypeAssignment_1)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group__2__Impl
	rule__ParameterizedTypeRefStructural__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_2()); }
(rule__ParameterizedTypeRefStructural__Group_2__0)?
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_3()); }
(rule__ParameterizedTypeRefStructural__Group_3__0)?
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterizedTypeRefStructural__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2__0__Impl
	rule__ParameterizedTypeRefStructural__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getLessThanSignKeyword_2_0()); }
(
	LessThanSign 
)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getLessThanSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2__1__Impl
	rule__ParameterizedTypeRefStructural__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsAssignment_2_1()); }
(rule__ParameterizedTypeRefStructural__TypeArgsAssignment_2_1)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2__2__Impl
	rule__ParameterizedTypeRefStructural__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_2_2()); }
(rule__ParameterizedTypeRefStructural__Group_2_2__0)*
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getGreaterThanSignKeyword_2_3()); }

	GreaterThanSign 

{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getGreaterThanSignKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterizedTypeRefStructural__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2_2__0__Impl
	rule__ParameterizedTypeRefStructural__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getCommaKeyword_2_2_0()); }

	Comma 

{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsAssignment_2_2_1()); }
(rule__ParameterizedTypeRefStructural__TypeArgsAssignment_2_2_1)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterizedTypeRefStructural__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_3__0__Impl
	rule__ParameterizedTypeRefStructural__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getWithKeyword_3_0()); }

	With 

{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getWithKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefStructural__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefStructural__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getTStructMemberListParserRuleCall_3_1()); }
	ruleTStructMemberList
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getTStructMemberListParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructMemberList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMemberList__Group__0__Impl
	rule__TStructMemberList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getLeftCurlyBracketKeyword_0()); }

	LeftCurlyBracket 

{ after(grammarAccess.getTStructMemberListAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMemberList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMemberList__Group__1__Impl
	rule__TStructMemberList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getGroup_1()); }
(rule__TStructMemberList__Group_1__0)*
{ after(grammarAccess.getTStructMemberListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMemberList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMemberList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getRightCurlyBracketKeyword_2()); }

	RightCurlyBracket 

{ after(grammarAccess.getTStructMemberListAccess().getRightCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TStructMemberList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMemberList__Group_1__0__Impl
	rule__TStructMemberList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersAssignment_1_0()); }
(rule__TStructMemberList__AstStructuralMembersAssignment_1_0)
{ after(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMemberList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMemberList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getAlternatives_1_1()); }
(rule__TStructMemberList__Alternatives_1_1)?
{ after(grammarAccess.getTStructMemberListAccess().getAlternatives_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructMethod__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group__0__Impl
	rule__TStructMethod__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGroup_0()); }
(rule__TStructMethod__Group_0__0)
{ after(grammarAccess.getTStructMethodAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group__1__Impl
	rule__TStructMethod__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTAnonymousFormalParameterListParserRuleCall_1()); }
	ruleTAnonymousFormalParameterList
{ after(grammarAccess.getTStructMethodAccess().getTAnonymousFormalParameterListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group__2__Impl
	rule__TStructMethod__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getTStructMethodAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGroup_3()); }
(rule__TStructMethod__Group_3__0)?
{ after(grammarAccess.getTStructMethodAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TStructMethod__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGroup_0_0()); }
(rule__TStructMethod__Group_0_0__0)
{ after(grammarAccess.getTStructMethodAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TStructMethod__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0__0__Impl
	rule__TStructMethod__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTStructMethodAction_0_0_0()); }
(

)
{ after(grammarAccess.getTStructMethodAccess().getTStructMethodAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0__1__Impl
	rule__TStructMethod__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGroup_0_0_1()); }
(rule__TStructMethod__Group_0_0_1__0)?
{ after(grammarAccess.getTStructMethodAccess().getGroup_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0__2__Impl
	rule__TStructMethod__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getNameAssignment_0_0_2()); }
(rule__TStructMethod__NameAssignment_0_0_2)
{ after(grammarAccess.getTStructMethodAccess().getNameAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getLeftParenthesisKeyword_0_0_3()); }

	LeftParenthesis 

{ after(grammarAccess.getTStructMethodAccess().getLeftParenthesisKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TStructMethod__Group_0_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1__0__Impl
	rule__TStructMethod__Group_0_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getLessThanSignKeyword_0_0_1_0()); }

	LessThanSign 

{ after(grammarAccess.getTStructMethodAccess().getLessThanSignKeyword_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1__1__Impl
	rule__TStructMethod__Group_0_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTypeVarsAssignment_0_0_1_1()); }
(rule__TStructMethod__TypeVarsAssignment_0_0_1_1)
{ after(grammarAccess.getTStructMethodAccess().getTypeVarsAssignment_0_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1__2__Impl
	rule__TStructMethod__Group_0_0_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGroup_0_0_1_2()); }
(rule__TStructMethod__Group_0_0_1_2__0)*
{ after(grammarAccess.getTStructMethodAccess().getGroup_0_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getGreaterThanSignKeyword_0_0_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getTStructMethodAccess().getGreaterThanSignKeyword_0_0_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TStructMethod__Group_0_0_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1_2__0__Impl
	rule__TStructMethod__Group_0_0_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getCommaKeyword_0_0_1_2_0()); }

	Comma 

{ after(grammarAccess.getTStructMethodAccess().getCommaKeyword_0_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_0_0_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_0_0_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_0_0_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTypeVarsAssignment_0_0_1_2_1()); }
(rule__TStructMethod__TypeVarsAssignment_0_0_1_2_1)
{ after(grammarAccess.getTStructMethodAccess().getTypeVarsAssignment_0_0_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructMethod__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_3__0__Impl
	rule__TStructMethod__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getColonKeyword_3_0()); }

	Colon 

{ after(grammarAccess.getTStructMethodAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructMethod__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructMethod__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getReturnTypeRefAssignment_3_1()); }
(rule__TStructMethod__ReturnTypeRefAssignment_3_1)
{ after(grammarAccess.getTStructMethodAccess().getReturnTypeRefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructField__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructField__Group__0__Impl
	rule__TStructField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getNameAssignment_0()); }
(rule__TStructField__NameAssignment_0)
{ after(grammarAccess.getTStructFieldAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructField__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getGroup_1()); }
(rule__TStructField__Group_1__0)?
{ after(grammarAccess.getTStructFieldAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructField__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructField__Group_1__0__Impl
	rule__TStructField__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getColonKeyword_1_0()); }

	Colon 

{ after(grammarAccess.getTStructFieldAccess().getColonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructField__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructField__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getTypeRefAssignment_1_1()); }
(rule__TStructField__TypeRefAssignment_1_1)
{ after(grammarAccess.getTStructFieldAccess().getTypeRefAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructGetter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group__0__Impl
	rule__TStructGetter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getGroup_0()); }
(rule__TStructGetter__Group_0__0)
{ after(grammarAccess.getTStructGetterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group__1__Impl
	rule__TStructGetter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getTStructGetterAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group__2__Impl
	rule__TStructGetter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getRightParenthesisKeyword_2()); }

	RightParenthesis 

{ after(grammarAccess.getTStructGetterAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getGroup_3()); }
(rule__TStructGetter__Group_3__0)?
{ after(grammarAccess.getTStructGetterAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TStructGetter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getGroup_0_0()); }
(rule__TStructGetter__Group_0_0__0)
{ after(grammarAccess.getTStructGetterAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TStructGetter__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_0_0__0__Impl
	rule__TStructGetter__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getTStructGetterAction_0_0_0()); }
(

)
{ after(grammarAccess.getTStructGetterAccess().getTStructGetterAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_0_0__1__Impl
	rule__TStructGetter__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getGetKeyword_0_0_1()); }

	Get 

{ after(grammarAccess.getTStructGetterAccess().getGetKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getNameAssignment_0_0_2()); }
(rule__TStructGetter__NameAssignment_0_0_2)
{ after(grammarAccess.getTStructGetterAccess().getNameAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TStructGetter__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_3__0__Impl
	rule__TStructGetter__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getColonKeyword_3_0()); }

	Colon 

{ after(grammarAccess.getTStructGetterAccess().getColonKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructGetter__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructGetter__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefAssignment_3_1()); }
(rule__TStructGetter__DeclaredTypeRefAssignment_3_1)
{ after(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TStructSetter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group__0__Impl
	rule__TStructSetter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getGroup_0()); }
(rule__TStructSetter__Group_0__0)
{ after(grammarAccess.getTStructSetterAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructSetter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group__1__Impl
	rule__TStructSetter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getLeftParenthesisKeyword_1()); }

	LeftParenthesis 

{ after(grammarAccess.getTStructSetterAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructSetter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group__2__Impl
	rule__TStructSetter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getFparAssignment_2()); }
(rule__TStructSetter__FparAssignment_2)
{ after(grammarAccess.getTStructSetterAccess().getFparAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructSetter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getRightParenthesisKeyword_3()); }

	RightParenthesis 

{ after(grammarAccess.getTStructSetterAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TStructSetter__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getGroup_0_0()); }
(rule__TStructSetter__Group_0_0__0)
{ after(grammarAccess.getTStructSetterAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TStructSetter__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group_0_0__0__Impl
	rule__TStructSetter__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getTStructSetterAction_0_0_0()); }
(

)
{ after(grammarAccess.getTStructSetterAccess().getTStructSetterAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructSetter__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group_0_0__1__Impl
	rule__TStructSetter__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getSetKeyword_0_0_1()); }

	Set 

{ after(grammarAccess.getTStructSetterAccess().getSetKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TStructSetter__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TStructSetter__Group_0_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getNameAssignment_0_0_2()); }
(rule__TStructSetter__NameAssignment_0_0_2)
{ after(grammarAccess.getTStructSetterAccess().getNameAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParameterizedTypeRefNominal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group__0__Impl
	rule__ParameterizedTypeRefNominal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeAssignment_0()); }
(rule__ParameterizedTypeRefNominal__DeclaredTypeAssignment_0)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefNominal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup_1()); }
(rule__ParameterizedTypeRefNominal__Group_1__0)?
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterizedTypeRefNominal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1__0__Impl
	rule__ParameterizedTypeRefNominal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getLessThanSignKeyword_1_0()); }
(
	LessThanSign 
)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getLessThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefNominal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1__1__Impl
	rule__ParameterizedTypeRefNominal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsAssignment_1_1()); }
(rule__ParameterizedTypeRefNominal__TypeArgsAssignment_1_1)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefNominal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1__2__Impl
	rule__ParameterizedTypeRefNominal__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup_1_2()); }
(rule__ParameterizedTypeRefNominal__Group_1_2__0)*
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefNominal__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getGreaterThanSignKeyword_1_3()); }

	GreaterThanSign 

{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getGreaterThanSignKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterizedTypeRefNominal__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1_2__0__Impl
	rule__ParameterizedTypeRefNominal__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getCommaKeyword_1_2_0()); }

	Comma 

{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterizedTypeRefNominal__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterizedTypeRefNominal__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsAssignment_1_2_1()); }
(rule__ParameterizedTypeRefNominal__TypeArgsAssignment_1_2_1)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypingStrategyUseSiteOperator__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingStrategyUseSiteOperator__Group__0__Impl
	rule__TypingStrategyUseSiteOperator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStrategyUseSiteOperator__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_0()); }

	Tilde 

{ after(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getTildeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypingStrategyUseSiteOperator__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypingStrategyUseSiteOperator__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypingStrategyUseSiteOperator__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getAlternatives_1()); }
(rule__TypingStrategyUseSiteOperator__Alternatives_1)?
{ after(grammarAccess.getTypingStrategyUseSiteOperatorAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstructorTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorTypeRef__Group__0__Impl
	rule__ConstructorTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getConstructorTypeRefAction_0()); }
(

)
{ after(grammarAccess.getConstructorTypeRefAccess().getConstructorTypeRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorTypeRef__Group__1__Impl
	rule__ConstructorTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getConstructorKeyword_1()); }

	Constructor 

{ after(grammarAccess.getConstructorTypeRefAccess().getConstructorKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorTypeRef__Group__2__Impl
	rule__ConstructorTypeRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getConstructorTypeRefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorTypeRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorTypeRef__Group__3__Impl
	rule__ConstructorTypeRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getStaticTypeRefAssignment_3()); }
(rule__ConstructorTypeRef__StaticTypeRefAssignment_3)
{ after(grammarAccess.getConstructorTypeRefAccess().getStaticTypeRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstructorTypeRef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstructorTypeRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getRightCurlyBracketKeyword_4()); }

	RightCurlyBracket 

{ after(grammarAccess.getConstructorTypeRefAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ClassifierTypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTypeRef__Group__0__Impl
	rule__ClassifierTypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getClassifierTypeRefAction_0()); }
(

)
{ after(grammarAccess.getClassifierTypeRefAccess().getClassifierTypeRefAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTypeRef__Group__1__Impl
	rule__ClassifierTypeRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getTypeKeyword_1()); }

	Type 

{ after(grammarAccess.getClassifierTypeRefAccess().getTypeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTypeRef__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTypeRef__Group__2__Impl
	rule__ClassifierTypeRef__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getLeftCurlyBracketKeyword_2()); }

	LeftCurlyBracket 

{ after(grammarAccess.getClassifierTypeRefAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTypeRef__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTypeRef__Group__3__Impl
	rule__ClassifierTypeRef__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getStaticTypeRefAssignment_3()); }
(rule__ClassifierTypeRef__StaticTypeRefAssignment_3)
{ after(grammarAccess.getClassifierTypeRefAccess().getStaticTypeRefAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClassifierTypeRef__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClassifierTypeRef__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getRightCurlyBracketKeyword_4()); }

	RightCurlyBracket 

{ after(grammarAccess.getClassifierTypeRefAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Wildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group__0__Impl
	rule__Wildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getGroup_0()); }
(rule__Wildcard__Group_0__0)
{ after(grammarAccess.getWildcardAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getAlternatives_1()); }
(rule__Wildcard__Alternatives_1)?
{ after(grammarAccess.getWildcardAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Wildcard__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_0__0__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getGroup_0_0()); }
(rule__Wildcard__Group_0_0__0)
{ after(grammarAccess.getWildcardAccess().getGroup_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Wildcard__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_0_0__0__Impl
	rule__Wildcard__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getWildcardAction_0_0_0()); }
(

)
{ after(grammarAccess.getWildcardAccess().getWildcardAction_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getQuestionMarkKeyword_0_0_1()); }

	QuestionMark 

{ after(grammarAccess.getWildcardAccess().getQuestionMarkKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Wildcard__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_1_0__0__Impl
	rule__Wildcard__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getExtendsKeyword_1_0_0()); }

	Extends 

{ after(grammarAccess.getWildcardAccess().getExtendsKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getDeclaredUpperBoundAssignment_1_0_1()); }
(rule__Wildcard__DeclaredUpperBoundAssignment_1_0_1)
{ after(grammarAccess.getWildcardAccess().getDeclaredUpperBoundAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Wildcard__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_1_1__0__Impl
	rule__Wildcard__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getSuperKeyword_1_1_0()); }

	Super 

{ after(grammarAccess.getWildcardAccess().getSuperKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Wildcard__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Wildcard__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getDeclaredLowerBoundAssignment_1_1_1()); }
(rule__Wildcard__DeclaredLowerBoundAssignment_1_1_1)
{ after(grammarAccess.getWildcardAccess().getDeclaredLowerBoundAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WildcardNewNotation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNewNotation__Group_0__0__Impl
	rule__WildcardNewNotation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationAssignment_0_0()); }
(rule__WildcardNewNotation__UsingInOutNotationAssignment_0_0)
{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardNewNotation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNewNotation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundAssignment_0_1()); }
(rule__WildcardNewNotation__DeclaredUpperBoundAssignment_0_1)
{ after(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WildcardNewNotation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNewNotation__Group_1__0__Impl
	rule__WildcardNewNotation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationAssignment_1_0()); }
(rule__WildcardNewNotation__UsingInOutNotationAssignment_1_0)
{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WildcardNewNotation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WildcardNewNotation__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundAssignment_1_1()); }
(rule__WildcardNewNotation__DeclaredLowerBoundAssignment_1_1)
{ after(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group__0__Impl
	rule__TypeVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getNameAssignment_0()); }
(rule__TypeVariable__NameAssignment_0)
{ after(grammarAccess.getTypeVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getGroup_1()); }
(rule__TypeVariable__Group_1__0)?
{ after(grammarAccess.getTypeVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeVariable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group_1__0__Impl
	rule__TypeVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getExtendsKeyword_1_0()); }

	Extends 

{ after(grammarAccess.getTypeVariableAccess().getExtendsKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group_1__1__Impl
	rule__TypeVariable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsAssignment_1_1()); }
(rule__TypeVariable__DeclaredUpperBoundsAssignment_1_1)
{ after(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getGroup_1_2()); }
(rule__TypeVariable__Group_1_2__0)*
{ after(grammarAccess.getTypeVariableAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeVariable__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group_1_2__0__Impl
	rule__TypeVariable__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getAmpersandKeyword_1_2_0()); }

	Ampersand 

{ after(grammarAccess.getTypeVariableAccess().getAmpersandKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeVariable__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeVariable__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsAssignment_1_2_1()); }
(rule__TypeVariable__DeclaredUpperBoundsAssignment_1_2_1)
{ after(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__TypeDefs__TypesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDefsAccess().getTypesTypeParserRuleCall_0()); }
	ruleType{ after(grammarAccess.getTypeDefsAccess().getTypesTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__NameAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getNameIDENTIFIERTerminalRuleCall_0_0_1_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getTAnnotationAccess().getNameIDENTIFIERTerminalRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__ArgsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getArgsTAnnotationArgumentParserRuleCall_1_1_0_0()); }
	ruleTAnnotationArgument{ after(grammarAccess.getTAnnotationAccess().getArgsTAnnotationArgumentParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotation__ArgsAssignment_1_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationAccess().getArgsTAnnotationArgumentParserRuleCall_1_1_1_1_0()); }
	ruleTAnnotationArgument{ after(grammarAccess.getTAnnotationAccess().getArgsTAnnotationArgumentParserRuleCall_1_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotationStringArgument__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationStringArgumentAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getTAnnotationStringArgumentAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnnotationTypeRefArgument__TypeRefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnnotationTypeRefArgumentAccess().getTypeRefTypeRefParserRuleCall_0()); }
	ruleTypeRef{ after(grammarAccess.getTAnnotationTypeRefArgumentAccess().getTypeRefTypeRefParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__UndefModifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getUndefModifierUndefModifierTokenParserRuleCall_1_0()); }
	ruleUndefModifierToken{ after(grammarAccess.getTypeRefAccess().getUndefModifierUndefModifierTokenParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__NullModifierAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getNullModifierNullModifierTokenParserRuleCall_2_0()); }
	ruleNullModifierToken{ after(grammarAccess.getTypeRefAccess().getNullModifierNullModifierTokenParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getNameTypesIdentifierParserRuleCall_1_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getPrimitiveTypeAccess().getNameTypesIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__TypeVarsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getTypeVarsTypeVariableParserRuleCall_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getPrimitiveTypeAccess().getTypeVarsTypeVariableParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__DeclaredElementTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getDeclaredElementTypeParameterizedTypeRefNominalParserRuleCall_3_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getPrimitiveTypeAccess().getDeclaredElementTypeParameterizedTypeRefNominalParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__AutoboxedTypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeTClassifierCrossReference_5_1_0()); }
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeTClassifierTypeReferenceNameParserRuleCall_5_1_0_1()); }
	ruleTypeReferenceName{ after(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeTClassifierTypeReferenceNameParserRuleCall_5_1_0_1()); }
)
{ after(grammarAccess.getPrimitiveTypeAccess().getAutoboxedTypeTClassifierCrossReference_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PrimitiveType__AssignmentCompatibleAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatiblePrimitiveTypeCrossReference_6_1_0()); }
(
{ before(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatiblePrimitiveTypeTypeReferenceNameParserRuleCall_6_1_0_1()); }
	ruleTypeReferenceName{ after(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatiblePrimitiveTypeTypeReferenceNameParserRuleCall_6_1_0_1()); }
)
{ after(grammarAccess.getPrimitiveTypeAccess().getAssignmentCompatiblePrimitiveTypeCrossReference_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getNameAnyKeyword_1_0()); }
(
{ before(grammarAccess.getAnyTypeAccess().getNameAnyKeyword_1_0()); }

	Any 

{ after(grammarAccess.getAnyTypeAccess().getNameAnyKeyword_1_0()); }
)

{ after(grammarAccess.getAnyTypeAccess().getNameAnyKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VoidType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVoidTypeAccess().getNameVoidKeyword_1_0()); }
(
{ before(grammarAccess.getVoidTypeAccess().getNameVoidKeyword_1_0()); }

	Void 

{ after(grammarAccess.getVoidTypeAccess().getNameVoidKeyword_1_0()); }
)

{ after(grammarAccess.getVoidTypeAccess().getNameVoidKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UndefinedType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUndefinedTypeAccess().getNameUndefinedKeyword_1_0()); }
(
{ before(grammarAccess.getUndefinedTypeAccess().getNameUndefinedKeyword_1_0()); }

	Undefined 

{ after(grammarAccess.getUndefinedTypeAccess().getNameUndefinedKeyword_1_0()); }
)

{ after(grammarAccess.getUndefinedTypeAccess().getNameUndefinedKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NullType__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullTypeAccess().getNameNullKeyword_1_0()); }
(
{ before(grammarAccess.getNullTypeAccess().getNameNullKeyword_1_0()); }

	Null 

{ after(grammarAccess.getNullTypeAccess().getNameNullKeyword_1_0()); }
)

{ after(grammarAccess.getNullTypeAccess().getNameNullKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__DeclaredTypeAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
	ruleTypeAccessModifier{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__DeclaredProvidedByRuntimeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }

	ProvidedByRuntime 

{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__DeclaredFinalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalFinalKeyword_2_0()); }
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalFinalKeyword_2_0()); }

	Final 

{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalFinalKeyword_2_0()); }
)

{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredFinalFinalKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getNameTypesIdentifierParserRuleCall_4_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTObjectPrototypeAccess().getNameTypesIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__TypeVarsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getTypeVarsTypeVariableParserRuleCall_5_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTObjectPrototypeAccess().getTypeVarsTypeVariableParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__TypeVarsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getTypeVarsTypeVariableParserRuleCall_5_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTObjectPrototypeAccess().getTypeVarsTypeVariableParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__SuperTypeAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getSuperTypeParameterizedTypeRefNominalParserRuleCall_6_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTObjectPrototypeAccess().getSuperTypeParameterizedTypeRefNominalParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__DeclaredElementTypeAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getDeclaredElementTypeParameterizedTypeRefNominalParserRuleCall_7_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTObjectPrototypeAccess().getDeclaredElementTypeParameterizedTypeRefNominalParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__AnnotationsAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getAnnotationsTAnnotationParserRuleCall_8_0()); }
	ruleTAnnotation{ after(grammarAccess.getTObjectPrototypeAccess().getAnnotationsTAnnotationParserRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__OwnedMembersAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersTMemberParserRuleCall_10_0()); }
	ruleTMember{ after(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersTMemberParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__CallableCtorAssignment_11_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getCallableCtorCallableCtorParserRuleCall_11_0_0()); }
	ruleCallableCtor{ after(grammarAccess.getTObjectPrototypeAccess().getCallableCtorCallableCtorParserRuleCall_11_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TObjectPrototype__OwnedMembersAssignment_11_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersTMemberParserRuleCall_11_1_0()); }
	ruleTMember{ after(grammarAccess.getTObjectPrototypeAccess().getOwnedMembersTMemberParserRuleCall_11_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getNameTypesIdentifierParserRuleCall_2_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getVirtualBaseTypeAccess().getNameTypesIdentifierParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VirtualBaseType__OwnedMembersAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVirtualBaseTypeAccess().getOwnedMembersTMemberParserRuleCall_4_0()); }
	ruleTMember{ after(grammarAccess.getVirtualBaseTypeAccess().getOwnedMembersTMemberParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__DeclaredTypeAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
	ruleTypeAccessModifier{ after(grammarAccess.getTClassAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__DeclaredProvidedByRuntimeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
(
{ before(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }

	ProvidedByRuntime 

{ after(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

{ after(grammarAccess.getTClassAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__DeclaredAbstractAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredAbstractAbstractKeyword_2_0()); }
(
{ before(grammarAccess.getTClassAccess().getDeclaredAbstractAbstractKeyword_2_0()); }

	Abstract 

{ after(grammarAccess.getTClassAccess().getDeclaredAbstractAbstractKeyword_2_0()); }
)

{ after(grammarAccess.getTClassAccess().getDeclaredAbstractAbstractKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__DeclaredFinalAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getDeclaredFinalFinalKeyword_3_0()); }
(
{ before(grammarAccess.getTClassAccess().getDeclaredFinalFinalKeyword_3_0()); }

	Final 

{ after(grammarAccess.getTClassAccess().getDeclaredFinalFinalKeyword_3_0()); }
)

{ after(grammarAccess.getTClassAccess().getDeclaredFinalFinalKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__TypingStrategyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_5_0()); }
	ruleTypingStrategyDefSiteOperator{ after(grammarAccess.getTClassAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__NameAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getNameTypesIdentifierParserRuleCall_6_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTClassAccess().getNameTypesIdentifierParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__TypeVarsAssignment_7_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypeVarsTypeVariableParserRuleCall_7_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTClassAccess().getTypeVarsTypeVariableParserRuleCall_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__TypeVarsAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getTypeVarsTypeVariableParserRuleCall_7_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTClassAccess().getTypeVarsTypeVariableParserRuleCall_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__SuperClassRefAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_8_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTClassAccess().getSuperClassRefParameterizedTypeRefNominalParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__ImplementedInterfaceRefsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_9_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTClassAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__ImplementedInterfaceRefsAssignment_9_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_9_2_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTClassAccess().getImplementedInterfaceRefsParameterizedTypeRefNominalParserRuleCall_9_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__AnnotationsAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getAnnotationsTAnnotationParserRuleCall_10_0()); }
	ruleTAnnotation{ after(grammarAccess.getTClassAccess().getAnnotationsTAnnotationParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__OwnedMembersAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getOwnedMembersTMemberParserRuleCall_12_0()); }
	ruleTMember{ after(grammarAccess.getTClassAccess().getOwnedMembersTMemberParserRuleCall_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__CallableCtorAssignment_13_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getCallableCtorCallableCtorParserRuleCall_13_0_0()); }
	ruleCallableCtor{ after(grammarAccess.getTClassAccess().getCallableCtorCallableCtorParserRuleCall_13_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TClass__OwnedMembersAssignment_13_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTClassAccess().getOwnedMembersTMemberParserRuleCall_13_1_0()); }
	ruleTMember{ after(grammarAccess.getTClassAccess().getOwnedMembersTMemberParserRuleCall_13_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__DeclaredTypeAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
	ruleTypeAccessModifier{ after(grammarAccess.getTInterfaceAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__DeclaredProvidedByRuntimeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
(
{ before(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }

	ProvidedByRuntime 

{ after(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

{ after(grammarAccess.getTInterfaceAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__TypingStrategyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_3_0()); }
	ruleTypingStrategyDefSiteOperator{ after(grammarAccess.getTInterfaceAccess().getTypingStrategyTypingStrategyDefSiteOperatorParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getNameTypesIdentifierParserRuleCall_4_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTInterfaceAccess().getNameTypesIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__TypeVarsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypeVarsTypeVariableParserRuleCall_5_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTInterfaceAccess().getTypeVarsTypeVariableParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__TypeVarsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getTypeVarsTypeVariableParserRuleCall_5_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTInterfaceAccess().getTypeVarsTypeVariableParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__SuperInterfaceRefsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_6_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__SuperInterfaceRefsAssignment_6_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_6_2_1_0()); }
	ruleParameterizedTypeRefNominal{ after(grammarAccess.getTInterfaceAccess().getSuperInterfaceRefsParameterizedTypeRefNominalParserRuleCall_6_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__AnnotationsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getAnnotationsTAnnotationParserRuleCall_7_0()); }
	ruleTAnnotation{ after(grammarAccess.getTInterfaceAccess().getAnnotationsTAnnotationParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TInterface__OwnedMembersAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTInterfaceAccess().getOwnedMembersTMemberParserRuleCall_9_0()); }
	ruleTMember{ after(grammarAccess.getTInterfaceAccess().getOwnedMembersTMemberParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__FparsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getFparsTFormalParameterParserRuleCall_2_0_0()); }
	ruleTFormalParameter{ after(grammarAccess.getCallableCtorAccess().getFparsTFormalParameterParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__FparsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getFparsTFormalParameterParserRuleCall_2_1_1_0()); }
	ruleTFormalParameter{ after(grammarAccess.getCallableCtorAccess().getFparsTFormalParameterParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallableCtor__ReturnTypeRefAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallableCtorAccess().getReturnTypeRefTypeRefParserRuleCall_4_1_0()); }
	ruleTypeRef{ after(grammarAccess.getCallableCtorAccess().getReturnTypeRefTypeRefParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__DeclaredMemberAccessModifierAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_0_0()); }
	ruleMemberAccessModifier{ after(grammarAccess.getTMethodAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__DeclaredStaticAssignment_0_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getDeclaredStaticStaticKeyword_0_0_1_0_0()); }
(
{ before(grammarAccess.getTMethodAccess().getDeclaredStaticStaticKeyword_0_0_1_0_0()); }

	Static 

{ after(grammarAccess.getTMethodAccess().getDeclaredStaticStaticKeyword_0_0_1_0_0()); }
)

{ after(grammarAccess.getTMethodAccess().getDeclaredStaticStaticKeyword_0_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__DeclaredAbstractAssignment_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getDeclaredAbstractAbstractKeyword_0_0_1_1_0()); }
(
{ before(grammarAccess.getTMethodAccess().getDeclaredAbstractAbstractKeyword_0_0_1_1_0()); }

	Abstract 

{ after(grammarAccess.getTMethodAccess().getDeclaredAbstractAbstractKeyword_0_0_1_1_0()); }
)

{ after(grammarAccess.getTMethodAccess().getDeclaredAbstractAbstractKeyword_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__TypeVarsAssignment_0_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__TypeVarsAssignment_0_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_2_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__NameAssignment_0_0_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getNameTypesIdentifierParserRuleCall_0_0_3_0_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTMethodAccess().getNameTypesIdentifierParserRuleCall_0_0_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__NameAssignment_0_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_3_1_0()); }
	ruleTypesComputedPropertyName{ after(grammarAccess.getTMethodAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__FparsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getFparsTFormalParameterParserRuleCall_1_0_0()); }
	ruleTFormalParameter{ after(grammarAccess.getTMethodAccess().getFparsTFormalParameterParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__FparsAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getFparsTFormalParameterParserRuleCall_1_1_1_0()); }
	ruleTFormalParameter{ after(grammarAccess.getTMethodAccess().getFparsTFormalParameterParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TMethod__ReturnTypeRefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTMethodAccess().getReturnTypeRefTypeRefParserRuleCall_4_0()); }
	ruleTypeRef{ after(grammarAccess.getTMethodAccess().getReturnTypeRefTypeRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__DeclaredMemberAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0()); }
	ruleMemberAccessModifier{ after(grammarAccess.getTFieldAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__DeclaredStaticAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getDeclaredStaticStaticKeyword_1_0_0()); }
(
{ before(grammarAccess.getTFieldAccess().getDeclaredStaticStaticKeyword_1_0_0()); }

	Static 

{ after(grammarAccess.getTFieldAccess().getDeclaredStaticStaticKeyword_1_0_0()); }
)

{ after(grammarAccess.getTFieldAccess().getDeclaredStaticStaticKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__ConstAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getConstConstKeyword_1_1_0()); }
(
{ before(grammarAccess.getTFieldAccess().getConstConstKeyword_1_1_0()); }

	Const 

{ after(grammarAccess.getTFieldAccess().getConstConstKeyword_1_1_0()); }
)

{ after(grammarAccess.getTFieldAccess().getConstConstKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__DeclaredFinalAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getDeclaredFinalFinalKeyword_1_2_0()); }
(
{ before(grammarAccess.getTFieldAccess().getDeclaredFinalFinalKeyword_1_2_0()); }

	Final 

{ after(grammarAccess.getTFieldAccess().getDeclaredFinalFinalKeyword_1_2_0()); }
)

{ after(grammarAccess.getTFieldAccess().getDeclaredFinalFinalKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getNameTypesIdentifierParserRuleCall_2_0_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTFieldAccess().getNameTypesIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__NameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getNameTypesComputedPropertyNameParserRuleCall_2_1_0()); }
	ruleTypesComputedPropertyName{ after(grammarAccess.getTFieldAccess().getNameTypesComputedPropertyNameParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TField__TypeRefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFieldAccess().getTypeRefTypeRefParserRuleCall_4_0()); }
	ruleTypeRef{ after(grammarAccess.getTFieldAccess().getTypeRefTypeRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__DeclaredMemberAccessModifierAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_1_0()); }
	ruleMemberAccessModifier{ after(grammarAccess.getTGetterAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__DeclaredAbstractAssignment_0_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
(
{ before(grammarAccess.getTGetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }

	Abstract 

{ after(grammarAccess.getTGetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
)

{ after(grammarAccess.getTGetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__DeclaredStaticAssignment_0_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
(
{ before(grammarAccess.getTGetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }

	Static 

{ after(grammarAccess.getTGetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
)

{ after(grammarAccess.getTGetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__NameAssignment_0_0_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getNameTypesIdentifierParserRuleCall_0_0_4_0_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTGetterAccess().getNameTypesIdentifierParserRuleCall_0_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__NameAssignment_0_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_4_1_0()); }
	ruleTypesComputedPropertyName{ after(grammarAccess.getTGetterAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TGetter__DeclaredTypeRefAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_4_0()); }
	ruleTypeRef{ after(grammarAccess.getTGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__DeclaredMemberAccessModifierAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_1_0()); }
	ruleMemberAccessModifier{ after(grammarAccess.getTSetterAccess().getDeclaredMemberAccessModifierMemberAccessModifierEnumRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__DeclaredAbstractAssignment_0_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
(
{ before(grammarAccess.getTSetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }

	Abstract 

{ after(grammarAccess.getTSetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
)

{ after(grammarAccess.getTSetterAccess().getDeclaredAbstractAbstractKeyword_0_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__DeclaredStaticAssignment_0_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
(
{ before(grammarAccess.getTSetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }

	Static 

{ after(grammarAccess.getTSetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
)

{ after(grammarAccess.getTSetterAccess().getDeclaredStaticStaticKeyword_0_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__NameAssignment_0_0_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getNameTypesIdentifierParserRuleCall_0_0_4_0_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTSetterAccess().getNameTypesIdentifierParserRuleCall_0_0_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__NameAssignment_0_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_4_1_0()); }
	ruleTypesComputedPropertyName{ after(grammarAccess.getTSetterAccess().getNameTypesComputedPropertyNameParserRuleCall_0_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TSetter__FparAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTSetterAccess().getFparTFormalParameterParserRuleCall_2_0()); }
	ruleTFormalParameter{ after(grammarAccess.getTSetterAccess().getFparTFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__DeclaredTypeAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
	ruleTypeAccessModifier{ after(grammarAccess.getTFunctionAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__DeclaredProvidedByRuntimeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
(
{ before(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }

	ProvidedByRuntime 

{ after(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

{ after(grammarAccess.getTFunctionAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__TypeVarsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getTypeVarsTypeVariableParserRuleCall_3_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTFunctionAccess().getTypeVarsTypeVariableParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__TypeVarsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getTypeVarsTypeVariableParserRuleCall_3_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTFunctionAccess().getTypeVarsTypeVariableParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getNameTIdentifierParserRuleCall_4_0()); }
	ruleTIdentifier{ after(grammarAccess.getTFunctionAccess().getNameTIdentifierParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__FparsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getFparsTFormalParameterParserRuleCall_6_0_0()); }
	ruleTFormalParameter{ after(grammarAccess.getTFunctionAccess().getFparsTFormalParameterParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__FparsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getFparsTFormalParameterParserRuleCall_6_1_1_0()); }
	ruleTFormalParameter{ after(grammarAccess.getTFunctionAccess().getFparsTFormalParameterParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFunction__ReturnTypeRefAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFunctionAccess().getReturnTypeRefTypeRefParserRuleCall_9_0()); }
	ruleTypeRef{ after(grammarAccess.getTFunctionAccess().getReturnTypeRefTypeRefParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__DeclaredTypeAccessModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
	ruleTypeAccessModifier{ after(grammarAccess.getTEnumAccess().getDeclaredTypeAccessModifierTypeAccessModifierEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__DeclaredProvidedByRuntimeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
(
{ before(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }

	ProvidedByRuntime 

{ after(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

{ after(grammarAccess.getTEnumAccess().getDeclaredProvidedByRuntimeProvidedByRuntimeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__NameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getNameTypesIdentifierParserRuleCall_3_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTEnumAccess().getNameTypesIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__LiteralsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getLiteralsTEnumLiteralParserRuleCall_5_0()); }
	ruleTEnumLiteral{ after(grammarAccess.getTEnumAccess().getLiteralsTEnumLiteralParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnum__LiteralsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumAccess().getLiteralsTEnumLiteralParserRuleCall_6_1_0()); }
	ruleTEnumLiteral{ after(grammarAccess.getTEnumAccess().getLiteralsTEnumLiteralParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TEnumLiteral__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTEnumLiteralAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getTEnumLiteralAccess().getNameIDENTIFIERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRefWithoutModifiers__DynamicAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0()); }
(
{ before(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0()); }

	PlusSign 

{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0()); }
)

{ after(grammarAccess.getTypeRefWithoutModifiersAccess().getDynamicPlusSignKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThisTypeRefStructural__DefinedTypingStrategyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); }
	ruleTypingStrategyUseSiteOperator{ after(grammarAccess.getThisTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__DeclaredThisTypeAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getDeclaredThisTypeTypeRefFunctionTypeExpressionParserRuleCall_2_3_0()); }
	ruleTypeRefFunctionTypeExpression{ after(grammarAccess.getFunctionTypeExpressionAccess().getDeclaredThisTypeTypeRefFunctionTypeExpressionParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__OwnedTypeVarsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__OwnedTypeVarsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getFunctionTypeExpressionAccess().getOwnedTypeVarsTypeVariableParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionTypeExpression__ReturnTypeRefAssignment_8_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionTypeExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_8_1_0()); }
	ruleTypeRef{ after(grammarAccess.getFunctionTypeExpressionAccess().getReturnTypeRefTypeRefParserRuleCall_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__FparsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_0_0()); }
	ruleTAnonymousFormalParameter{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameterList__FparsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_1_1_0()); }
	ruleTAnonymousFormalParameter{ after(grammarAccess.getTAnonymousFormalParameterListAccess().getFparsTAnonymousFormalParameterParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__VariadicAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
)

{ after(grammarAccess.getTAnonymousFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getNameTIdentifierParserRuleCall_1_0_0()); }
	ruleTIdentifier{ after(grammarAccess.getTAnonymousFormalParameterAccess().getNameTIdentifierParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TAnonymousFormalParameter__TypeRefAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefTypeRefParserRuleCall_2_0()); }
	ruleTypeRef{ after(grammarAccess.getTAnonymousFormalParameterAccess().getTypeRefTypeRefParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__VariadicAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
(
{ before(grammarAccess.getTFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }

	FullStopFullStopFullStop 

{ after(grammarAccess.getTFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
)

{ after(grammarAccess.getTFormalParameterAccess().getVariadicFullStopFullStopFullStopKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getNameTIdentifierParserRuleCall_1_0()); }
	ruleTIdentifier{ after(grammarAccess.getTFormalParameterAccess().getNameTIdentifierParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TFormalParameter__TypeRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTFormalParameterAccess().getTypeRefTypeRefParserRuleCall_3_0()); }
	ruleTypeRef{ after(grammarAccess.getTFormalParameterAccess().getTypeRefTypeRefParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__TypeRefsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); }
	ruleTypeRefWithoutModifiers{ after(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnionTypeExpression__TypeRefsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); }
	ruleTypeRefWithoutModifiers{ after(grammarAccess.getUnionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__TypeRefsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); }
	ruleTypeRefWithoutModifiers{ after(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntersectionTypeExpression__TypeRefsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); }
	ruleTypeRefWithoutModifiers{ after(grammarAccess.getIntersectionTypeExpressionAccess().getTypeRefsTypeRefWithoutModifiersParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__DefinedTypingStrategyAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); }
	ruleTypingStrategyUseSiteOperator{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getDefinedTypingStrategyTypingStrategyUseSiteOperatorParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__DeclaredTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeCrossReference_1_0()); }
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeTypeReferenceNameParserRuleCall_1_0_1()); }
	ruleTypeReferenceName{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeTypeReferenceNameParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getDeclaredTypeTypeCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__TypeArgsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefStructural__TypeArgsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_2_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getParameterizedTypeRefStructuralAccess().getTypeArgsTypeArgumentParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMemberList__AstStructuralMembersAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersTStructMemberParserRuleCall_1_0_0()); }
	ruleTStructMember{ after(grammarAccess.getTStructMemberListAccess().getAstStructuralMembersTStructMemberParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__TypeVarsAssignment_0_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__TypeVarsAssignment_0_0_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_2_1_0()); }
	ruleTypeVariable{ after(grammarAccess.getTStructMethodAccess().getTypeVarsTypeVariableParserRuleCall_0_0_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__NameAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTStructMethodAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructMethod__ReturnTypeRefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructMethodAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); }
	ruleTypeRef{ after(grammarAccess.getTStructMethodAccess().getReturnTypeRefTypeRefParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getNameTypesIdentifierParserRuleCall_0_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTStructFieldAccess().getNameTypesIdentifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructField__TypeRefAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructFieldAccess().getTypeRefTypeRefParserRuleCall_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getTStructFieldAccess().getTypeRefTypeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__NameAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTStructGetterAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructGetter__DeclaredTypeRefAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_3_1_0()); }
	ruleTypeRef{ after(grammarAccess.getTStructGetterAccess().getDeclaredTypeRefTypeRefParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__NameAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
	ruleTypesIdentifier{ after(grammarAccess.getTStructSetterAccess().getNameTypesIdentifierParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TStructSetter__FparAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTStructSetterAccess().getFparTAnonymousFormalParameterParserRuleCall_2_0()); }
	ruleTAnonymousFormalParameter{ after(grammarAccess.getTStructSetterAccess().getFparTAnonymousFormalParameterParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__DeclaredTypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeTypeReferenceNameParserRuleCall_0_0_1()); }
	ruleTypeReferenceName{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeTypeReferenceNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getDeclaredTypeTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__TypeArgsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterizedTypeRefNominal__TypeArgsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_2_1_0()); }
	ruleTypeArgument{ after(grammarAccess.getParameterizedTypeRefNominalAccess().getTypeArgsTypeArgumentParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstructorTypeRef__StaticTypeRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstructorTypeRefAccess().getStaticTypeRefTypeRefInClassifierTypeParserRuleCall_3_0()); }
	ruleTypeRefInClassifierType{ after(grammarAccess.getConstructorTypeRefAccess().getStaticTypeRefTypeRefInClassifierTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClassifierTypeRef__StaticTypeRefAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClassifierTypeRefAccess().getStaticTypeRefTypeRefInClassifierTypeParserRuleCall_3_0()); }
	ruleTypeRefInClassifierType{ after(grammarAccess.getClassifierTypeRefAccess().getStaticTypeRefTypeRefInClassifierTypeParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__DeclaredUpperBoundAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getDeclaredUpperBoundTypeRefParserRuleCall_1_0_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardAccess().getDeclaredUpperBoundTypeRefParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__DeclaredLowerBoundAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__UsingInOutNotationAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0()); }
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0()); }

	Out 

{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0()); }
)

{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationOutKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__DeclaredUpperBoundAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundTypeRefParserRuleCall_0_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardNewNotationAccess().getDeclaredUpperBoundTypeRefParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__UsingInOutNotationAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0()); }
(
{ before(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0()); }

	In 

{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0()); }
)

{ after(grammarAccess.getWildcardNewNotationAccess().getUsingInOutNotationInKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WildcardNewNotation__DeclaredLowerBoundAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_0()); }
	ruleTypeRef{ after(grammarAccess.getWildcardNewNotationAccess().getDeclaredLowerBoundTypeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getNameIDENTIFIERTerminalRuleCall_0_0()); }
	RULE_IDENTIFIER{ after(grammarAccess.getTypeVariableAccess().getNameIDENTIFIERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__DeclaredUpperBoundsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsParameterizedTypeRefParserRuleCall_1_1_0()); }
	ruleParameterizedTypeRef{ after(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsParameterizedTypeRefParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeVariable__DeclaredUpperBoundsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsParameterizedTypeRefParserRuleCall_1_2_1_0()); }
	ruleParameterizedTypeRef{ after(grammarAccess.getTypeVariableAccess().getDeclaredUpperBoundsParameterizedTypeRefParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


